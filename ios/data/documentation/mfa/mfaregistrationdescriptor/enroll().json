{"metadata":{"role":"symbol","title":"enroll()","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"enroll","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"modules":[{"name":"MFA"}],"externalID":"s:3MFA25MFARegistrationDescriptorP6enrollyyYaKF","required":true,"symbolKind":"method"},"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor"]]},"abstract":[{"text":"Performs the enrollment of the factor.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enroll","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This method will generate a private\/public key pair.  The private key is automatically saved to the Keychain."}],"type":"paragraph"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can access the private key by name using the "},{"type":"codeVoice","code":"authenticator.id"},{"type":"text","text":" concatenated with the enrolled factor type.  For example:"}]},{"syntax":"swift","type":"codeListing","code":["let controller = MFARegistrationController(json: qrScanResult)","","\/\/ Initiate the registration provider.","let provider = try await controller.initiate(with: \"John Doe\", pushToken: \"abc123\")","","\/\/ Get the next enrollable signature.","guard let factor = await provider.nextEnrollment() else {","   return","}","","\/\/ Enroll the factor.","try await provider.enroll()","","\/\/ Finalize the enrollment operations and generate the authenticator.","let authenticator = try await provider.finalize()","","\/\/ Get the enrolled face factor and retrieve the name in the Keychain to obtain the private key.","if let enrolledFactor = authenticator.allowedFactors.first(where: { $0.valueType is FaceFactorInfo }), let face = enrolledFactor.valueType as? FaceFactorInfo  {","   print(face[keyPath: \\.name])  \/\/ prints \"<authenicator.id>.face\"","}"]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor\/enroll()"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mfa\/mfaregistrationdescriptor\/enroll()"]}],"references":{"doc://com.ibm.verify.ios.sdk/documentation/MFA/MFARegistrationDescriptor/enroll()":{"kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enroll"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"role":"symbol","url":"\/documentation\/mfa\/mfaregistrationdescriptor\/enroll()","required":true,"title":"enroll()","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor\/enroll()","abstract":[{"text":"Performs the enrollment of the factor.","type":"text"}]},"doc://com.ibm.verify.ios.sdk/documentation/MFA/MFARegistrationDescriptor":{"abstract":[{"type":"text","text":"An interface that registration providers implement to perform enrollment operations."}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MFARegistrationDescriptor","kind":"identifier"}],"navigatorTitle":[{"text":"MFARegistrationDescriptor","kind":"identifier"}],"url":"\/documentation\/mfa\/mfaregistrationdescriptor","title":"MFARegistrationDescriptor","type":"topic","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor"},"doc://com.ibm.verify.ios.sdk/documentation/MFA":{"type":"topic","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","title":"MFA","url":"\/documentation\/mfa","kind":"symbol","abstract":[],"role":"collection"}}}