{"metadata":{"role":"symbol","roleHeading":"Instance Method","required":true,"externalID":"s:3MFA25MFARegistrationDescriptorP6enrollyyYaKF","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enroll","kind":"identifier"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"title":"enroll()","modules":[{"name":"MFA"}],"symbolKind":"method"},"abstract":[{"text":"Performs the enrollment of the factor.","type":"text"}],"kind":"symbol","variants":[{"paths":["\/documentation\/mfa\/mfaregistrationdescriptor\/enroll()"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"enroll"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"platforms":["iOS"]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This method will generate a private\/public key pair.  The private key is automatically saved to the Keychain."}]},{"inlineContent":[{"text":"You can access the private key by name using the ","type":"text"},{"code":"authenticator.id","type":"codeVoice"},{"type":"text","text":" concatenated with the enrolled factor type.  For example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let controller = MFARegistrationController(json: qrScanResult)","","\/\/ Initiate the registration provider.","let provider = try await controller.initiate(with: \"John Doe\", pushToken: \"abc123\")","","\/\/ Get the next enrollable signature.","guard let factor = await provider.nextEnrollment() else {","   return","}","","\/\/ Enroll the factor.","try await provider.enroll()","","\/\/ Finalize the enrollment operations and generate the authenticator.","let authenticator = try await provider.finalize()","","\/\/ Get the enrolled face factor and retrieve the name in the Keychain to obtain the private key.","if let enrolledFactor = authenticator.allowedFactors.first(where: { $0.valueType is FaceFactorInfo }), let face = enrolledFactor.valueType as? FaceFactorInfo  {","   print(face[keyPath: \\.name])  \/\/ prints \"<authenicator.id>.face\"","}"]}]}],"hierarchy":{"paths":[["doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor\/enroll()"},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"references":{"doc://com.ibm.verify.ios.sdk/documentation/MFA/MFARegistrationDescriptor":{"url":"\/documentation\/mfa\/mfaregistrationdescriptor","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MFARegistrationDescriptor","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"An interface that registration providers implement to perform enrollment operations."}],"kind":"symbol","type":"topic","title":"MFARegistrationDescriptor","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor","navigatorTitle":[{"text":"MFARegistrationDescriptor","kind":"identifier"}]},"doc://com.ibm.verify.ios.sdk/documentation/MFA":{"url":"\/documentation\/mfa","role":"collection","title":"MFA","abstract":[],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","kind":"symbol","type":"topic"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/MFARegistrationDescriptor/enroll()":{"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/MFARegistrationDescriptor\/enroll()","role":"symbol","required":true,"abstract":[{"type":"text","text":"Performs the enrollment of the factor."}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enroll"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"text":"throws","kind":"keyword"}],"type":"topic","title":"enroll()","url":"\/documentation\/mfa\/mfaregistrationdescriptor\/enroll()","kind":"symbol"}}}