{"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enroll"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"roleHeading":"Instance Method","modules":[{"name":"MFA"}],"symbolKind":"method","role":"symbol","title":"enroll()","externalID":"s:3MFA29OnPremiseRegistrationProviderC6enrollyyYaKF"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"enroll","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This method will generate a private\/public key pair.  The private key is automatically saved to the Keychain.","type":"text"}]},{"inlineContent":[{"text":"You can access the private key by name using the ","type":"text"},{"code":"authenticator.id","type":"codeVoice"},{"type":"text","text":" concatenated with the enrolled factor type.  For example:"}],"type":"paragraph"},{"code":["let controller = MFARegistrationController(json: qrScanResult)","","\/\/ Initiate the registration provider.","let provider = try await controller.initiate(with: \"John Doe\", pushToken: \"abc123\")","","\/\/ Get the next enrollable signature.","guard let factor = await provider.nextEnrollment() else {","   return","}","","\/\/ Enroll the factor.","try await provider.enroll()","","\/\/ Finalize the enrollment operations and generate the authenticator.","let authenticator = try await provider.finalize()","","\/\/ Get the enrolled face factor and retrieve the name in the Keychain to obtain the private key.","if let enrolledFactor = authenticator.allowedFactors.first(where: { $0.valueType is FaceFactorInfo }), let face = enrolledFactor.valueType as? FaceFactorInfo  {","   print(face[keyPath: \\.name])  \/\/ prints \"<authenicator.id>.face\"","}"],"type":"codeListing","syntax":"swift"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mfa\/onpremiseregistrationprovider\/enroll()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider\/enroll()"},"hierarchy":{"paths":[["doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider"]]},"abstract":[{"type":"text","text":"Performs the enrollment of the factor."}],"references":{"doc://com.ibm.verify.ios.sdk/documentation/MFA/OnPremiseRegistrationProvider/enroll()":{"kind":"symbol","abstract":[{"text":"Performs the enrollment of the factor.","type":"text"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider\/enroll()","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"enroll"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/mfa\/onpremiseregistrationprovider\/enroll()","title":"enroll()","role":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/OnPremiseRegistrationProvider":{"type":"topic","abstract":[{"text":"A mechanism for creating a multi-factor authenticator and associated factor enrollments for IBM Security Verify Access.","type":"text"}],"role":"symbol","title":"OnPremiseRegistrationProvider","navigatorTitle":[{"text":"OnPremiseRegistrationProvider","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OnPremiseRegistrationProvider"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider","url":"\/documentation\/mfa\/onpremiseregistrationprovider","kind":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA":{"role":"collection","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/mfa","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","title":"MFA"}}}