{"hierarchy":{"paths":[["doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider\/nextEnrollment()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"nextEnrollment","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"EnrollableSignature","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","preciseIdentifier":"s:3MFA19EnrollableSignaturea","kind":"typeIdentifier"},{"kind":"text","text":"?"}]}]},{"content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature"},{"type":"text","text":" that is used to create the key pair."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"text":"The function defined here returns ","type":"text"},{"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","type":"reference","isActive":true},{"type":"text","text":" which is used to create a public-key and sign the data. For example:"}],"type":"paragraph"},{"type":"codeListing","syntax":"swift","code":["let controller = MFARegistrationController(json: qrScanResult)","","\/\/ Initiate the registration provider.","let provider = try await controller.initiate(with: \"John Doe\", pushToken: \"abc123\")","","\/\/ Get the next enrollable signature.","guard let factor = await provider.nextEnrollment() else {","   return","}","","\/\/ Create the key-pair using default SHA512 hash.","let key = RSA.Signing.PrivateKey()","let publicKey = key.publicKey","","\/\/ Sign the data with the private key.","let value = factor.dataToSign.data(using: .utf8)!","let signature = try key.signature(for: value)","","\/\/ Add to the Keychain.","try KeychainService.default.addItem(\"biometric\",","   value: key.derRepresentation,","   accessControl: factor.biometricAuthentication ? .biometryCurrentSet : nil)","","\/\/ Enroll the factor.","try await provider.enroll(with: \"biometric\",","   publicKey: key.publicKey.x509Representation","   signedData: String(decoding: signature.rawRepresentable, as: UTF8.self)"]}],"kind":"content"}],"abstract":[{"text":"Gets the next available factor for enrollment.","type":"text"}],"sections":[],"kind":"symbol","variants":[{"paths":["\/documentation\/mfa\/onpremiseregistrationprovider\/nextenrollment()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"nextEnrollment()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextEnrollment"},{"kind":"text","text":"() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:3MFA19EnrollableSignaturea","text":"EnrollableSignature","kind":"typeIdentifier"},{"kind":"text","text":"?"}],"externalID":"s:3MFA29OnPremiseRegistrationProviderC14nextEnrollmentSb23biometricAuthentication_AA17HashAlgorithmTypeO9algorithmSS10dataToSigntSgyYaF","roleHeading":"Instance Method","modules":[{"name":"MFA"}],"symbolKind":"method","role":"symbol"},"references":{"doc://com.ibm.verify.ios.sdk/documentation/MFA/OnPremiseRegistrationProvider/nextEnrollment()":{"title":"nextEnrollment()","kind":"symbol","url":"\/documentation\/mfa\/onpremiseregistrationprovider\/nextenrollment()","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"nextEnrollment"},{"kind":"text","text":"() "},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"EnrollableSignature","preciseIdentifier":"s:3MFA19EnrollableSignaturea","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","abstract":[{"text":"Gets the next available factor for enrollment.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider\/nextEnrollment()"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/OnPremiseRegistrationProvider":{"type":"topic","abstract":[{"text":"A mechanism for creating a multi-factor authenticator and associated factor enrollments for IBM Security Verify Access.","type":"text"}],"role":"symbol","title":"OnPremiseRegistrationProvider","navigatorTitle":[{"text":"OnPremiseRegistrationProvider","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"OnPremiseRegistrationProvider"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/OnPremiseRegistrationProvider","url":"\/documentation\/mfa\/onpremiseregistrationprovider","kind":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/EnrollableSignature":{"navigatorTitle":[{"text":"EnrollableSignature","kind":"identifier"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","title":"EnrollableSignature","url":"\/documentation\/mfa\/enrollablesignature","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnrollableSignature","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A type that represents an enrollable signature.","type":"text"}],"role":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA":{"role":"collection","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/mfa","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","title":"MFA"}}}