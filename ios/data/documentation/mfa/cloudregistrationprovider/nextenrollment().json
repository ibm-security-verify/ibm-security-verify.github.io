{"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["iOS"],"tokens":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"nextEnrollment","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:3MFA19EnrollableSignaturea","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","kind":"typeIdentifier","text":"EnrollableSignature"},{"text":"?","kind":"text"}],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"An "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature"},{"text":" that is used to create the key pair.","type":"text"}]}],"kind":"content"},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"The function defined here returns "},{"type":"reference","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","isActive":true},{"type":"text","text":" which is used to create a public-key and sign the data. For example:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let controller = MFARegistrationController(json: qrScanResult)","","\/\/ Initiate the registration provider.","let provider = try await controller.initiate(with: \"John Doe\", pushToken: \"abc123\")","","\/\/ Get the next enrollable signature.","guard let factor = await provider.nextEnrollment() else {","   return","}","","\/\/ Create the key-pair using default SHA512 hash.","let key = RSA.Signing.PrivateKey()","let publicKey = key.publicKey","","\/\/ Sign the data with the private key.","let value = factor.dataToSign.data(using: .utf8)!","let signature = try key.signature(for: value)","","\/\/ Add to the Keychain.","try KeychainService.default.addItem(\"biometric\",","   value: key.derRepresentation,","   accessControl: factor.biometricAuthentication ? .biometryCurrentSet : nil)","","\/\/ Enroll the factor.","try await provider.enroll(with: \"biometric\",","   publicKey: key.publicKey.x509Representation","   signedData: String(decoding: signature.rawRepresentable, as: UTF8.self)"]}]}],"identifier":{"url":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/CloudRegistrationProvider\/nextEnrollment()","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mfa\/cloudregistrationprovider\/nextenrollment()"]}],"metadata":{"modules":[{"name":"MFA"}],"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"nextEnrollment","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"async","kind":"keyword"},{"kind":"text","text":" -> "},{"text":"EnrollableSignature","kind":"typeIdentifier","preciseIdentifier":"s:3MFA19EnrollableSignaturea"},{"kind":"text","text":"?"}],"externalID":"s:3MFA25CloudRegistrationProviderC14nextEnrollmentSb23biometricAuthentication_AA17HashAlgorithmTypeO9algorithmSS10dataToSigntSgyYaF","roleHeading":"Instance Method","title":"nextEnrollment()","role":"symbol"},"kind":"symbol","abstract":[{"type":"text","text":"Gets the next available factor for enrollment."}],"hierarchy":{"paths":[["doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/CloudRegistrationProvider"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://com.ibm.verify.ios.sdk/documentation/MFA":{"role":"collection","kind":"symbol","type":"topic","abstract":[],"url":"\/documentation\/mfa","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA","title":"MFA"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/EnrollableSignature":{"navigatorTitle":[{"text":"EnrollableSignature","kind":"identifier"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/EnrollableSignature","title":"EnrollableSignature","url":"\/documentation\/mfa\/enrollablesignature","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EnrollableSignature","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"text":"A type that represents an enrollable signature.","type":"text"}],"role":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/CloudRegistrationProvider/nextEnrollment()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextEnrollment"},{"text":"() ","kind":"text"},{"kind":"keyword","text":"async"},{"text":" -> ","kind":"text"},{"text":"EnrollableSignature","preciseIdentifier":"s:3MFA19EnrollableSignaturea","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/CloudRegistrationProvider\/nextEnrollment()","abstract":[{"text":"Gets the next available factor for enrollment.","type":"text"}],"title":"nextEnrollment()","kind":"symbol","type":"topic","url":"\/documentation\/mfa\/cloudregistrationprovider\/nextenrollment()","role":"symbol"},"doc://com.ibm.verify.ios.sdk/documentation/MFA/CloudRegistrationProvider":{"type":"topic","identifier":"doc:\/\/com.ibm.verify.ios.sdk\/documentation\/MFA\/CloudRegistrationProvider","kind":"symbol","title":"CloudRegistrationProvider","abstract":[{"text":"A mechanism for creating a multi-factor authenticator and associated factor enrollments for IBM Security Verify.","type":"text"}],"navigatorTitle":[{"text":"CloudRegistrationProvider","kind":"identifier"}],"url":"\/documentation\/mfa\/cloudregistrationprovider","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CloudRegistrationProvider"}]}}}