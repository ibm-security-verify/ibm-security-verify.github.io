{"includedArchiveIdentifiers":["com.ibm.verify.ios.sdk"],"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/adaptivecontext\/collectionservice","title":"var collectionService: AdaptiveCollectionService?","type":"property"},{"path":"\/documentation\/adaptive\/adaptivecontext\/renewsessionidinterval","title":"var renewSessionIdInterval: Int","type":"property"},{"path":"\/documentation\/adaptive\/adaptivecontext\/sessionid","title":"var sessionId: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/adaptive\/adaptivecontext\/reset()","title":"func reset() throws","type":"method"},{"path":"\/documentation\/adaptive\/adaptivecontext\/start()","title":"func start() throws","type":"method"},{"path":"\/documentation\/adaptive\/adaptivecontext\/stop()","title":"func stop() throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/adaptivecontext\/shared","title":"static let shared: AdaptiveContext","type":"property"}],"path":"\/documentation\/adaptive\/adaptivecontext","title":"AdaptiveContext","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/adaptive\/adaptivecollectionservice\/reset(new:)","title":"func reset(new: String) throws","type":"method"},{"path":"\/documentation\/adaptive\/adaptivecollectionservice\/start(with:)","title":"func start(with: String) throws","type":"method"},{"path":"\/documentation\/adaptive\/adaptivecollectionservice\/stop()","title":"func stop() throws","type":"method"}],"path":"\/documentation\/adaptive\/adaptivecollectionservice","title":"AdaptiveCollectionService","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/adaptive\/adaptivedelegate\/assessment(with:evaluationcontext:completion:)","title":"func assessment(with: String, evaluationContext: String, completion: (Result<AdaptiveResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/adaptive\/adaptivedelegate\/evaluate(using:evaluationcontext:completion:)","title":"func evaluate(using: FactorEvaluation, evaluationContext: String, completion: (Result<AdaptiveResult, Error>) -> Void)","type":"method"},{"path":"\/documentation\/adaptive\/adaptivedelegate\/generate(with:transactionid:factor:completion:)","title":"func generate(with: String, transactionId: String, factor: FactorType, completion: (Result<GenerateResult, Error>) -> Void)","type":"method"}],"path":"\/documentation\/adaptive\/adaptivedelegate","title":"AdaptiveDelegate","type":"protocol"},{"path":"\/documentation\/adaptive\/adaptiveresult","title":"AdaptiveResult","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/assessmentfactor\/type","title":"var type: FactorType","type":"property"}],"path":"\/documentation\/adaptive\/assessmentfactor","title":"AssessmentFactor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factorevaluation\/transactionid","title":"var transactionId: String","type":"property"}],"path":"\/documentation\/adaptive\/factorevaluation","title":"FactorEvaluation","type":"protocol"},{"path":"\/documentation\/adaptive\/generateresult","title":"GenerateResult","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/allowassessmentresult\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/allowassessmentresult\/token","title":"let token: String","type":"property"}],"path":"\/documentation\/adaptive\/allowassessmentresult","title":"AllowAssessmentResult","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/allowedfactor\/type","title":"var type: FactorType","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/allowedfactor\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/allowedfactor\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/allowedfactor","title":"AllowedFactor","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/assessmentstatustype\/allow","title":"static let allow: String","type":"property"},{"path":"\/documentation\/adaptive\/assessmentstatustype\/deny","title":"static let deny: String","type":"property"},{"path":"\/documentation\/adaptive\/assessmentstatustype\/requires","title":"static let requires: String","type":"property"}],"path":"\/documentation\/adaptive\/assessmentstatustype","title":"AssessmentStatusType","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/denyassessmentresult\/init()","title":"init()","type":"init"}],"path":"\/documentation\/adaptive\/denyassessmentresult","title":"DenyAssessmentResult","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/enrolledfactor\/attributes","title":"var attributes: [String : Any]","type":"property"},{"path":"\/documentation\/adaptive\/enrolledfactor\/enabled","title":"var enabled: Bool?","type":"property"},{"path":"\/documentation\/adaptive\/enrolledfactor\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/adaptive\/enrolledfactor\/type","title":"var type: FactorType","type":"property"},{"path":"\/documentation\/adaptive\/enrolledfactor\/validated","title":"var validated: Bool?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/enrolledfactor\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/enrolledfactor\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/enrolledfactor","title":"EnrolledFactor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidoevaluation\/init(_:clientdatajson:authenticatordata:userhandle:signature:)","title":"init(String, clientDataJSON: String, authenticatorData: String, userHandle: String?, signature: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidoevaluation\/authenticatordata","title":"let authenticatorData: String","type":"property"},{"path":"\/documentation\/adaptive\/fidoevaluation\/clientdatajson","title":"let clientDataJSON: String","type":"property"},{"path":"\/documentation\/adaptive\/fidoevaluation\/signature","title":"let signature: String","type":"property"},{"path":"\/documentation\/adaptive\/fidoevaluation\/transactionid","title":"let transactionId: String","type":"property"},{"path":"\/documentation\/adaptive\/fidoevaluation\/userhandle","title":"let userHandle: String?","type":"property"}],"path":"\/documentation\/adaptive\/fidoevaluation","title":"FIDOEvaluation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/init(_:challenge:userverification:timeout:allowcredentials:)","title":"init(String, challenge: String, userVerification: String?, timeout: Int, allowCredentials: [FIDOCredential]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/allowcredentials","title":"let allowCredentials: [FIDOCredential]?","type":"property"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/challenge","title":"let challenge: String","type":"property"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/relyingpartyid","title":"let relyingPartyId: String","type":"property"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/timeout","title":"let timeout: Int","type":"property"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/userverification","title":"let userVerification: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidogenerateresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/fidogenerateresult\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/fidogenerateresult","title":"FIDOGenerateResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/knowledgequestionevaluation\/init(_:answers:)","title":"init(String, answers: [String : String])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/knowledgequestionevaluation\/answers","title":"let answers: [String : String]","type":"property"},{"path":"\/documentation\/adaptive\/knowledgequestionevaluation\/transactionid","title":"let transactionId: String","type":"property"}],"path":"\/documentation\/adaptive\/knowledgequestionevaluation","title":"KnowledgeQuestionEvaluation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/knowledgequestiongenerateresult\/init(_:)","title":"init([QuestionInfo])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/knowledgequestiongenerateresult\/questions","title":"let questions: [QuestionInfo]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/knowledgequestiongenerateresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/knowledgequestiongenerateresult\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/knowledgequestiongenerateresult","title":"KnowledgeQuestionGenerateResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodeevaluation\/init(_:code:otp:)","title":"init(String, code: String, otp: OneTimePasscodeType)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodeevaluation\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/adaptive\/onetimepasscodeevaluation\/otp","title":"let otp: OneTimePasscodeType","type":"property"},{"path":"\/documentation\/adaptive\/onetimepasscodeevaluation\/transactionid","title":"let transactionId: String","type":"property"}],"path":"\/documentation\/adaptive\/onetimepasscodeevaluation","title":"OneTimePasscodeEvaluation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/otpgenerateresult\/init(_:)","title":"init(String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/otpgenerateresult\/correlation","title":"let correlation: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/otpgenerateresult\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/otpgenerateresult\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/otpgenerateresult","title":"OtpGenerateResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/qrcodeevaluation\/init(_:accesstoken:)","title":"init(String, accessToken: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/qrcodeevaluation\/accesstoken","title":"let accessToken: String","type":"property"},{"path":"\/documentation\/adaptive\/qrcodeevaluation\/transactionid","title":"let transactionId: String","type":"property"}],"path":"\/documentation\/adaptive\/qrcodeevaluation","title":"QrCodeEvaluation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/questioninfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/questioninfo\/question","title":"let question: String","type":"property"},{"path":"\/documentation\/adaptive\/questioninfo\/questionkey","title":"let questionKey: String","type":"property"}],"path":"\/documentation\/adaptive\/questioninfo","title":"QuestionInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/requiresassessmentresult\/init(_:factors:)","title":"init(String, factors: [AssessmentFactor])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/requiresassessmentresult\/factors","title":"let factors: [AssessmentFactor]","type":"property"},{"path":"\/documentation\/adaptive\/requiresassessmentresult\/transactionid","title":"let transactionId: String","type":"property"}],"path":"\/documentation\/adaptive\/requiresassessmentresult","title":"RequiresAssessmentResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/userdefault\/init(key:value:)","title":"init(key: String, value: T)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/userdefault\/wrappedvalue","title":"var wrappedValue: T","type":"property"}],"path":"\/documentation\/adaptive\/userdefault","title":"UserDefault","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/usernamepasswordevaluation\/init(_:username:password:)","title":"init(String, username: String, password: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/usernamepasswordevaluation\/password","title":"let password: String","type":"property"},{"path":"\/documentation\/adaptive\/usernamepasswordevaluation\/transactionid","title":"let transactionId: String","type":"property"},{"path":"\/documentation\/adaptive\/usernamepasswordevaluation\/username","title":"let username: String","type":"property"}],"path":"\/documentation\/adaptive\/usernamepasswordevaluation","title":"UsernamePasswordEvaluation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/voidgenerateresult\/init()","title":"init()","type":"init"}],"path":"\/documentation\/adaptive\/voidgenerateresult","title":"VoidGenerateResult","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/adaptive\/fidocredential","title":"FIDOCredential","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/emailotp","title":"case emailotp","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/fido2","title":"case fido2","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/multifactor","title":"case multifactor","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/password","title":"case password","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/qr","title":"case qr","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/questions","title":"case questions","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/smsotp","title":"case smsotp","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/totp","title":"case totp","type":"case"},{"path":"\/documentation\/adaptive\/factortype\/unknown","title":"case unknown","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/init(from:)-48b83","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/adaptive\/factortype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/adaptive\/factortype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/init(from:)-1qdfg","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/adaptive\/factortype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/adaptive\/factortype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/factortype","title":"FactorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/emailotp","title":"case emailotp","type":"case"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/smsotp","title":"case smsotp","type":"case"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/totp","title":"case totp","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/adaptive\/onetimepasscodetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/adaptive\/onetimepasscodetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/adaptive\/onetimepasscodetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/adaptive\/onetimepasscodetype","title":"OneTimePasscodeType","type":"enum"}],"path":"\/documentation\/adaptive","title":"Adaptive","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovider\/init(clientid:clientsecret:timeoutinterval:additionalparameters:certificatetrust:)","title":"init(clientId: String, clientSecret: String?, timeoutInterval: TimeInterval, additionalParameters: [String : Any], certificateTrust: URLSessionDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovider\/additionalheaders","title":"var additionalHeaders: [String : String]","type":"property"},{"path":"\/documentation\/authentication\/oauthprovider\/delegate","title":"var delegate: OAuthProviderDelegate?","type":"property"},{"path":"\/documentation\/authentication\/oauthprovider\/timeoutinterval","title":"var timeoutInterval: TimeInterval","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovider\/authorize(issuer:redirecturl:authorizationcode:codeverifier:scope:)","title":"func authorize(issuer: URL, redirectUrl: URL?, authorizationCode: String, codeVerifier: String?, scope: [String]?) async throws -> TokenInfo","type":"method"},{"path":"\/documentation\/authentication\/oauthprovider\/authorize(issuer:username:password:scope:)","title":"func authorize(issuer: URL, username: String, password: String, scope: [String]?) async throws -> TokenInfo","type":"method"},{"path":"\/documentation\/authentication\/oauthprovider\/authorizewithbrowser(issuer:redirecturl:presentingviewcontroller:codechallenge:method:scope:state:sharesession:)","title":"func authorizeWithBrowser(issuer: URL, redirectUrl: URL, presentingViewController: ASWebAuthenticationPresentationContextProviding, codeChallenge: String?, method: CodeChallengeMethod?, scope: [String]?, state: String?, shareSession: Bool)","type":"method"},{"path":"\/documentation\/authentication\/oauthprovider\/refresh(issuer:refreshtoken:scope:)","title":"func refresh(issuer: URL, refreshToken: String, scope: [String]?) async throws -> TokenInfo","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovider\/discover(issuer:)","title":"static func discover(issuer: URL) async throws -> OIDCMetadataInfo","type":"method"}],"path":"\/documentation\/authentication\/oauthprovider","title":"OAuthProvider","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthproviderdelegate\/oauthprovider(provider:didcompletewithcode:)","title":"func oauthProvider(provider: OAuthProvider, didCompleteWithCode: (code: String, state: String?))","type":"method"},{"path":"\/documentation\/authentication\/oauthproviderdelegate\/oauthprovider(provider:didcompletewitherror:)","title":"func oauthProvider(provider: OAuthProvider, didCompleteWithError: Error)","type":"method"}],"path":"\/documentation\/authentication\/oauthproviderdelegate","title":"OAuthProviderDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/authorizationendpoint","title":"let authorizationEndpoint: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/claimtypessupported","title":"var claimTypesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/claimslocalessupported","title":"let claimsLocalesSupported: [String]?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/claimsparametersupported","title":"var claimsParameterSupported: Bool","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/claimssupported","title":"var claimsSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/displayvaluessupported","title":"var displayValuesSupported: [String]?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/granttypessupported","title":"var grantTypesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/idtokenencryptionalgvaluessupported","title":"var idTokenEncryptionAlgValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/idtokenencryptionencvaluessupported","title":"var idTokenEncryptionEncValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/idtokensigningalgvaluessupported","title":"let idTokenSigningAlgValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/issuer","title":"let issuer: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/jwksuri","title":"let jwksUri: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/oppolicyuri","title":"let opPolicyUri: String?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/optosuri","title":"let opToSUri: String?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/registrationendpoint","title":"let registrationEndpoint: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requestobjectencryptionalgvaluessupported","title":"var requestObjectEncryptionAlgValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requestobjectencryptionencvaluessupported","title":"var requestObjectEncryptionEncValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requestobjectsigningalgvaluessupported","title":"var requestObjectSigningAlgValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requestparametersupported","title":"var requestParameterSupported: Bool","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requesturiparametersupported","title":"var requestUriParameterSupported: Bool","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/requirerequesturiregistration","title":"var requireRequestUriRegistration: Bool","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/responsemodessupported","title":"let responseModesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/responsetypessupported","title":"let responseTypesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/servicedocumentation","title":"let serviceDocumentation: String?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/subjecttypessupported","title":"let subjectTypesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/tokenendpoint","title":"let tokenEndpoint: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/tokenendpointauthmethodssupported","title":"var tokenEndpointAuthMethodsSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/tokenendpointauthsigningalgvaluessupported","title":"var tokenEndpointAuthSigningAlgValuesSupported: [String]?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/uilocalessupported","title":"let uiLocalesSupported: [String]?","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/userinfoencryptionalgvaluessupported","title":"var userinfoEncryptionAlgValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/userinfoencryptionencvaluessupported","title":"var userinfoEncryptionEncValuesSupported: [String]","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/userinfoendpoint","title":"let userinfoEndpoint: String","type":"property"},{"path":"\/documentation\/authentication\/oidcmetadatainfo\/userinfosigningalgvaluessupported","title":"var userinfoSigningAlgValuesSupported: [String]","type":"property"}],"path":"\/documentation\/authentication\/oidcmetadatainfo","title":"OIDCMetadataInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authentication\/tokeninfo\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/tokeninfo\/accesstoken","title":"let accessToken: String","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/additionaldata","title":"let additionalData: [String : Any]","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/authorizationheader","title":"var authorizationHeader: String","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/expiresin","title":"let expiresIn: Int","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/expireson","title":"let expiresOn: Date","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/idtoken","title":"let idToken: String?","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/refreshtoken","title":"let refreshToken: String?","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/scope","title":"let scope: String?","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/shouldrefresh","title":"var shouldRefresh: Bool","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/tokenexpired","title":"var tokenExpired: Bool","type":"property"},{"path":"\/documentation\/authentication\/tokeninfo\/tokentype","title":"let tokenType: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/tokeninfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/authentication\/tokeninfo\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/authentication\/tokeninfo\/==(_:_:)","title":"static func == (TokenInfo, TokenInfo) -> Bool","type":"op"}],"path":"\/documentation\/authentication\/tokeninfo\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/authentication\/tokeninfo","title":"TokenInfo","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/authentication\/codechallengemethod\/s256","title":"case S256","type":"case"},{"path":"\/documentation\/authentication\/codechallengemethod\/plain","title":"case plain","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/authentication\/codechallengemethod\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/authentication\/codechallengemethod\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/authentication\/codechallengemethod\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/codechallengemethod\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/codechallengemethod\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/authentication\/codechallengemethod\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/authentication\/codechallengemethod","title":"CodeChallengeMethod","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/dpop\/generateproof(_:hashalgorithm:uri:method:accesstoken:)","title":"static func generateProof(RSA.Signing.PrivateKey, hashAlgorithm: any HashFunction, uri: String, method: method, accessToken: String?) throws -> String","type":"method"}],"path":"\/documentation\/authentication\/dpop","title":"DPoP","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovidererror\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/authentication\/oauthprovidererror\/general(message:)","title":"case general(message: String)","type":"case"},{"path":"\/documentation\/authentication\/oauthprovidererror\/invalidresponse","title":"case invalidResponse","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovidererror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovidererror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/authentication\/oauthprovidererror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovidererror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/authentication\/oauthprovidererror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/authentication\/oauthprovidererror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/authentication\/oauthprovidererror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/authentication\/oauthprovidererror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/authentication\/oauthprovidererror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/authentication\/oauthprovidererror","title":"OAuthProviderError","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/authentication\/pkce\/generatecodechallenge(from:)","title":"static func generateCodeChallenge(from: String) -> String?","type":"method"},{"path":"\/documentation\/authentication\/pkce\/generatecodeverifier()","title":"static func generateCodeVerifier() -> String","type":"method"}],"path":"\/documentation\/authentication\/pkce","title":"PKCE","type":"enum"}],"path":"\/documentation\/authentication","title":"Authentication","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/keychainservice\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/keychainservice\/additem(_:value:accesscontrol:accessibility:)-48nj4","title":"func addItem<T>(String, value: T, accessControl: SecAccessControl?, accessibility: SecAccessible) throws","type":"method"},{"path":"\/documentation\/core\/keychainservice\/additem(_:value:accesscontrol:accessibility:)-4ac5v","title":"func addItem(String, value: Data, accessControl: SecAccessControl?, accessibility: SecAccessible) throws","type":"method"},{"path":"\/documentation\/core\/keychainservice\/deleteitem(_:)","title":"func deleteItem(String) throws","type":"method"},{"path":"\/documentation\/core\/keychainservice\/haspolicydomainstatechanged(_:)","title":"func hasPolicyDomainStateChanged(Data?) -> Bool","type":"method"},{"path":"\/documentation\/core\/keychainservice\/itemexists(_:)","title":"func itemExists(String) -> Bool","type":"method"},{"path":"\/documentation\/core\/keychainservice\/readitem(_:)","title":"func readItem(String) throws -> Data","type":"method"},{"path":"\/documentation\/core\/keychainservice\/readitem(_:type:)","title":"func readItem<T>(String, type: T.Type) throws -> T","type":"method"},{"path":"\/documentation\/core\/keychainservice\/renameitem(_:newkey:)","title":"func renameItem(String, newKey: String) throws","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/keychainservice\/default","title":"class var `default`: KeychainService","type":"property"}],"path":"\/documentation\/core\/keychainservice","title":"KeychainService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/pinnedcertificatedelegate\/init(with:)","title":"init?(with: String)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/pinnedcertificatedelegate\/urlsession(_:didreceive:completionhandler:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"}],"path":"\/documentation\/core\/pinnedcertificatedelegate","title":"PinnedCertificateDelegate","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/selfsignedcertificatedelegate\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/selfsignedcertificatedelegate\/urlsession(_:didreceive:completionhandler:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"}],"path":"\/documentation\/core\/selfsignedcertificatedelegate","title":"SelfSignedCertificateDelegate","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/core\/defaultvalue\/value","title":"Value","type":"associatedtype"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/defaultvalue\/defaultvalue","title":"static var defaultValue: Value","type":"property"}],"path":"\/documentation\/core\/defaultvalue","title":"DefaultValue","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/init(_:)","title":"init<T>(T?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/value","title":"let value: Any","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/core\/anycodable\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/core\/anycodable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/core\/anycodable\/==(_:_:)","title":"static func == (AnyCodable, AnyCodable) -> Bool","type":"op"}],"path":"\/documentation\/core\/anycodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/core\/anycodable\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/core\/anycodable\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/core\/anycodable\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/anycodable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/anycodable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/core\/anycodable","title":"AnyCodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/init(_:)","title":"init<T>(T?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/value","title":"let value: Any","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/core\/anydecodable\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/core\/anydecodable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/core\/anydecodable\/==(_:_:)","title":"static func == (AnyDecodable, AnyDecodable) -> Bool","type":"op"}],"path":"\/documentation\/core\/anydecodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/anydecodable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/anydecodable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/core\/anydecodable","title":"AnyDecodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/init(_:)","title":"init<T>(T?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/value","title":"let value: Any","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/core\/anyencodable\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/core\/anyencodable\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/core\/anyencodable\/==(_:_:)","title":"static func == (AnyEncodable, AnyEncodable) -> Bool","type":"op"}],"path":"\/documentation\/core\/anyencodable\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/init(extendedgraphemeclusterliteral:)","title":"init(extendedGraphemeClusterLiteral: Self.StringLiteralType)","type":"init"}],"path":"\/documentation\/core\/anyencodable\/expressiblebyextendedgraphemeclusterliteral-implementations","title":"ExpressibleByExtendedGraphemeClusterLiteral Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/init(stringinterpolation:)","title":"init(stringInterpolation: DefaultStringInterpolation)","type":"init"}],"path":"\/documentation\/core\/anyencodable\/expressiblebystringinterpolation-implementations","title":"ExpressibleByStringInterpolation Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/init(unicodescalarliteral:)","title":"init(unicodeScalarLiteral: Self.ExtendedGraphemeClusterLiteralType)","type":"init"}],"path":"\/documentation\/core\/anyencodable\/expressiblebyunicodescalarliteral-implementations","title":"ExpressibleByUnicodeScalarLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/anyencodable\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/anyencodable\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/core\/anyencodable","title":"AnyEncodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/httpresource\/init(_:url:accept:contenttype:body:headers:timeoutinterval:queryparams:)","title":"init(method, url: URL, accept: ContentType?, contentType: ContentType?, body: Data?, headers: [String : String], timeOutInterval: TimeInterval, queryParams: [String : String])","type":"init"},{"path":"\/documentation\/core\/httpresource\/init(_:url:accept:contenttype:body:headers:timeoutinterval:queryparams:parse:)","title":"init(method, url: URL, accept: ContentType?, contentType: ContentType?, body: Data?, headers: [String : String], timeOutInterval: TimeInterval, queryParams: [String : String], parse: (Data?, URLResponse?) -> Result<T, Error>)","type":"init"},{"path":"\/documentation\/core\/httpresource\/init(json:url:accept:body:headers:timeoutinterval:queryparams:decoder:encoder:)","title":"init<V>(json: method, url: URL, accept: ContentType, body: V?, headers: [String : String], timeOutInterval: TimeInterval, queryParams: [String : String], decoder: JSONDecoder, encoder: JSONEncoder)","type":"init"},{"path":"\/documentation\/core\/httpresource\/init(json:url:accept:contenttype:body:headers:timeoutinterval:queryparams:decoder:)","title":"init(json: method, url: URL, accept: ContentType, contentType: ContentType, body: Data?, headers: [String : String], timeOutInterval: TimeInterval, queryParams: [String : String], decoder: JSONDecoder)","type":"init"},{"path":"\/documentation\/core\/httpresource\/init(request:parse:)","title":"init(request: URLRequest, parse: (Data?, URLResponse?) -> Result<T, Error>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/httpresource\/map(_:)","title":"func map<V>((T) -> V) -> HTTPResource<V>","type":"method"}],"path":"\/documentation\/core\/httpresource","title":"HTTPResource","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/unknowncodingkeys\/init(intvalue:)","title":"init?(intValue: Int)","type":"init"},{"path":"\/documentation\/core\/unknowncodingkeys\/init(stringvalue:)","title":"init?(stringValue: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/unknowncodingkeys\/intvalue","title":"var intValue: Int?","type":"property"},{"path":"\/documentation\/core\/unknowncodingkeys\/stringvalue","title":"var stringValue: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/unknowncodingkeys\/debugdescription","title":"var debugDescription: String","type":"property"},{"path":"\/documentation\/core\/unknowncodingkeys\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/core\/unknowncodingkeys\/codingkey-implementations","title":"CodingKey Implementations","type":"symbol"}],"path":"\/documentation\/core\/unknowncodingkeys","title":"UnknownCodingKeys","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/core\/urlencode(from:)","title":"func urlEncode(from: [String : Any]) -> String","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/core\/list","title":"List","type":"typealias"},{"path":"\/documentation\/core\/map","title":"Map","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/contenttype\/jpeg","title":"case jpeg","type":"case"},{"path":"\/documentation\/core\/contenttype\/json","title":"case json","type":"case"},{"path":"\/documentation\/core\/contenttype\/urlencoded","title":"case urlEncoded","type":"case"},{"path":"\/documentation\/core\/contenttype\/xml","title":"case xml","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/contenttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/contenttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/contenttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/contenttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/contenttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/contenttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/core\/contenttype","title":"ContentType","type":"enum"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/default\/wrapper\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/wrapper\/wrappedvalue","title":"var wrappedValue: T.Value","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/default\/wrapper\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/core\/default\/wrapper\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/default\/wrapper\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/core\/default\/wrapper\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/default\/wrapper\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/default\/wrapper\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/core\/default\/wrapper","title":"Default.Wrapper","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/core\/default\/emptylist","title":"Default.EmptyList","type":"typealias"},{"path":"\/documentation\/core\/default\/emptymap","title":"Default.EmptyMap","type":"typealias"},{"path":"\/documentation\/core\/default\/emptystring","title":"Default.EmptyString","type":"typealias"},{"path":"\/documentation\/core\/default\/false","title":"Default.False","type":"typealias"},{"path":"\/documentation\/core\/default\/true","title":"Default.True","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/value\/emptylist\/defaultvalue","title":"static var defaultValue: T","type":"property"}],"path":"\/documentation\/core\/default\/value\/emptylist","title":"Default.Value.EmptyList","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/value\/emptymap\/defaultvalue","title":"static var defaultValue: T","type":"property"}],"path":"\/documentation\/core\/default\/value\/emptymap","title":"Default.Value.EmptyMap","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/value\/emptystring\/defaultvalue","title":"static var defaultValue: String","type":"property"}],"path":"\/documentation\/core\/default\/value\/emptystring","title":"Default.Value.EmptyString","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/value\/false\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/core\/default\/value\/false","title":"Default.Value.False","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/default\/value\/true\/defaultvalue","title":"static var defaultValue: Bool","type":"property"}],"path":"\/documentation\/core\/default\/value\/true","title":"Default.Value.True","type":"enum"}],"path":"\/documentation\/core\/default\/value","title":"Default.Value","type":"enum"}],"path":"\/documentation\/core\/default","title":"Default","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/keychainerror\/duplicatekey","title":"case duplicateKey","type":"case"},{"path":"\/documentation\/core\/keychainerror\/invalidkey","title":"case invalidKey","type":"case"},{"path":"\/documentation\/core\/keychainerror\/unexpecteddata","title":"case unexpectedData","type":"case"},{"path":"\/documentation\/core\/keychainerror\/unhandlederror(message:)","title":"case unhandledError(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/keychainerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/keychainerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/keychainerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/core\/keychainerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/core\/keychainerror","title":"KeychainError","type":"enum"},{"children":[{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/keysize\/bitlength","title":"let bitLength: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/keysize\/bits2048","title":"static let bits2048: RSA.Signing.KeySize","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/keysize\/bits3072","title":"static let bits3072: RSA.Signing.KeySize","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/keysize\/bits4096","title":"static let bits4096: RSA.Signing.KeySize","type":"property"}],"path":"\/documentation\/core\/rsa\/signing\/keysize","title":"RSA.Signing.KeySize","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/init(derrepresentation:)","title":"init<D>(derRepresentation: D) throws","type":"init"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/init(keysize:)","title":"init(keySize: RSA.Signing.KeySize)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/derrepresentation","title":"var derRepresentation: Data","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/keyrepresentation","title":"var keyRepresentation: SecKey","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/publickey","title":"var publicKey: RSA.Signing.PublicKey","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/sizeinbits","title":"var sizeInBits: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/signature(for:)-4wuyb","title":"func signature<D>(for: D) throws -> RSA.Signing.RSASignature","type":"method"},{"path":"\/documentation\/core\/rsa\/signing\/privatekey\/signature(for:)-8zepj","title":"func signature<D>(for: D) throws -> RSA.Signing.RSASignature","type":"method"}],"path":"\/documentation\/core\/rsa\/signing\/privatekey","title":"RSA.Signing.PrivateKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/init(derrepresentation:)","title":"init<D>(derRepresentation: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/derrepresentation","title":"var derRepresentation: Data","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/jwkrepresentation","title":"var jwkRepresentation: String","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/keyrepresentation","title":"var keyRepresentation: SecKey","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/pemrepresentation","title":"var pemRepresentation: String","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/sizeinbits","title":"var sizeInBits: Int","type":"property"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/x509representation","title":"var x509Representation: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/isvalidsignature(_:for:)-2la7l","title":"func isValidSignature<D>(RSA.Signing.RSASignature, for: D) -> Bool","type":"method"},{"path":"\/documentation\/core\/rsa\/signing\/publickey\/isvalidsignature(_:for:)-3xr04","title":"func isValidSignature<D>(RSA.Signing.RSASignature, for: D) -> Bool","type":"method"}],"path":"\/documentation\/core\/rsa\/signing\/publickey","title":"RSA.Signing.PublicKey","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/rsasignature\/init(rawrepresentation:)","title":"init<D>(rawRepresentation: D) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/rsasignature\/rawrepresentation","title":"var rawRepresentation: Data","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/rsa\/signing\/rsasignature\/withunsafebytes(_:)","title":"func withUnsafeBytes<R>((UnsafeRawBufferPointer) throws -> R) rethrows -> R","type":"method"}],"path":"\/documentation\/core\/rsa\/signing\/rsasignature","title":"RSA.Signing.RSASignature","type":"struct"}],"path":"\/documentation\/core\/rsa\/signing","title":"RSA.Signing","type":"enum"}],"path":"\/documentation\/core\/rsa","title":"RSA","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/secaccesscontrol\/biometryany","title":"case biometryAny","type":"case"},{"path":"\/documentation\/core\/secaccesscontrol\/biometrycurrentset","title":"case biometryCurrentSet","type":"case"},{"path":"\/documentation\/core\/secaccesscontrol\/devicepasscode","title":"case devicePasscode","type":"case"},{"path":"\/documentation\/core\/secaccesscontrol\/userpresence","title":"case userPresence","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/secaccesscontrol\/init(rawvalue:)","title":"init?(rawValue: SecAccessControlCreateFlags)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/secaccesscontrol\/rawvalue-swift.property","title":"var rawValue: RawValue","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/core\/secaccesscontrol\/rawvalue-swift.typealias","title":"SecAccessControl.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/secaccesscontrol\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/secaccesscontrol\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/core\/secaccesscontrol","title":"SecAccessControl","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/afterfirstunlock","title":"case afterFirstUnlock","type":"case"},{"path":"\/documentation\/core\/secaccessible\/afterfirstunlockthisdeviceonly","title":"case afterFirstUnlockThisDeviceOnly","type":"case"},{"path":"\/documentation\/core\/secaccessible\/whenunlocked","title":"case whenUnlocked","type":"case"},{"path":"\/documentation\/core\/secaccessible\/whenunlockedthisdeviceonly","title":"case whenUnlockedThisDeviceOnly","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/init(rawvalue:)","title":"init?(rawValue: CFString)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/rawvalue-swift.property","title":"var rawValue: RawValue","type":"property"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/rawvalue-swift.typealias","title":"SecAccessible.RawValue","type":"typealias"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/secaccessible\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/secaccessible\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/secaccessible\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/core\/secaccessible","title":"SecAccessible","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/urlsessionerror\/==(_:_:)","title":"static func == (URLSessionError, URLSessionError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/urlsessionerror\/invalidresource","title":"case invalidResource","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/invalidresponse(statuscode:description:)","title":"case invalidResponse(statusCode: Int, description: String)","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/nodata","title":"case noData","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/parsingfailed","title":"case parsingFailed","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/transportfailed(_:)","title":"case transportFailed(Error)","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/unauthenticated","title":"case unauthenticated","type":"case"},{"path":"\/documentation\/core\/urlsessionerror\/unknown","title":"case unknown","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/urlsessionerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/urlsessionerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/urlsessionerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/core\/urlsessionerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/urlsessionerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/core\/urlsessionerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/core\/urlsessionerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/core\/urlsessionerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/core\/urlsessionerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/core\/urlsessionerror","title":"URLSessionError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/core\/method\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/core\/method\/get","title":"case get","type":"case"},{"path":"\/documentation\/core\/method\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/core\/method\/post","title":"case post","type":"case"},{"path":"\/documentation\/core\/method\/put","title":"case put","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/core\/method\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/core\/method\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/core\/method\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/method\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/method\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/core\/method\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/core\/method","title":"method","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/dateformatter\/iso8061formatterbehavior","title":"static let iso8061FormatterBehavior: DateFormatter","type":"property"}],"path":"\/documentation\/core\/foundation\/dateformatter","title":"DateFormatter","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/jsondecoder\/decode(type:from:)","title":"func decode<T>(type: [T].Type, from: Data) throws -> [T]","type":"method"}],"path":"\/documentation\/core\/foundation\/jsondecoder","title":"JSONDecoder","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/nsnumber\/isbool","title":"var isBool: Bool","type":"property"}],"path":"\/documentation\/core\/foundation\/nsnumber","title":"NSNumber","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/thread\/threadidentifier","title":"var threadIdentifier: Int32","type":"property"}],"path":"\/documentation\/core\/foundation\/thread","title":"Thread","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/urlsession\/datatask(for:)","title":"func dataTask<T>(for: HTTPResource<T>) async throws -> T","type":"method"}],"path":"\/documentation\/core\/foundation\/urlsession","title":"URLSession","type":"extension"},{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/data\/base64urlencodedstring(options:)","title":"func base64UrlEncodedString(options: Data.Base64EncodingOptions) -> String","type":"method"}],"path":"\/documentation\/core\/foundation\/data","title":"Data","type":"extension"},{"title":"Extended Types","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/core\/foundation\/nsdata\/base64encodingoptions\/nopaddingcharacters","title":"static let noPaddingCharacters: Data.Base64EncodingOptions","type":"property"},{"path":"\/documentation\/core\/foundation\/nsdata\/base64encodingoptions\/safeurlcharacters","title":"static let safeUrlCharacters: Data.Base64EncodingOptions","type":"property"}],"path":"\/documentation\/core\/foundation\/nsdata\/base64encodingoptions","title":"NSData.Base64EncodingOptions","type":"extension"}],"path":"\/documentation\/core\/foundation\/nsdata","title":"NSData","type":"extension"}],"path":"\/documentation\/core\/foundation","title":"Foundation","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/swift\/keyeddecodingcontainer\/decode()","title":"func decode() -> [String : Any]","type":"method"},{"path":"\/documentation\/core\/swift\/keyeddecodingcontainer\/decode(_:forkey:)","title":"func decode<T>(Default.Wrapper<T>.Type, forKey: Key) throws -> Default.Wrapper<T>","type":"method"},{"path":"\/documentation\/core\/swift\/keyeddecodingcontainer\/decode(_:forkeys:)","title":"func decode<T>(T.Type, forKeys: [K]) throws -> T","type":"method"},{"path":"\/documentation\/core\/swift\/keyeddecodingcontainer\/decode(exclude:)","title":"func decode<T>(exclude: T.Type) -> [String : Any]","type":"method"},{"path":"\/documentation\/core\/swift\/keyeddecodingcontainer\/decodeifpresent(_:forkeys:)","title":"func decodeIfPresent<T>(T.Type, forKeys: [K]) throws -> T?","type":"method"}],"path":"\/documentation\/core\/swift\/keyeddecodingcontainer","title":"KeyedDecodingContainer","type":"extension"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/core\/swift\/keyedencodingcontainer\/encode(withdictionary:)","title":"func encode(withDictionary: [String : Any]) throws","type":"method"}],"path":"\/documentation\/core\/swift\/keyedencodingcontainer","title":"KeyedEncodingContainer","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/core\/swift\/string\/base64urlencodedstringwithpadding","title":"var base64UrlEncodedStringWithPadding: String","type":"property"},{"path":"\/documentation\/core\/swift\/string\/urlformencodedstring","title":"var urlFormEncodedString: String","type":"property"}],"path":"\/documentation\/core\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/core\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/core","title":"Core","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/walletprovider\/init(json:ignoresslcertificate:)","title":"init(json: String, ignoreSSLCertificate: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/walletprovider\/register(with:clientid:accesstoken:refreshtoken:expiresin:pushtoken:)","title":"func register(with: String, clientId: String, accessToken: String, refreshToken: String?, expiresIn: Int?, pushToken: String?) async throws -> Wallet","type":"method"},{"path":"\/documentation\/dc\/walletprovider\/register(with:clientid:token:pushtoken:)","title":"func register(with: String, clientId: String, token: TokenInfo, pushToken: String?) async throws -> Wallet","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/walletprovider\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/dc\/walletprovider\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/dc\/walletprovider\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/dc\/walletprovider\/actor-implementations","title":"Actor Implementations","type":"symbol"}],"path":"\/documentation\/dc\/walletprovider","title":"WalletProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservice\/init(token:refreshuri:baseuri:clientid:certificatetrust:)","title":"init(token: String, refreshUri: URL, baseUri: URL, clientId: String, certificateTrust: URLSessionDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservice\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/dc\/walletservice\/baseuri","title":"let baseUri: URL","type":"property"},{"path":"\/documentation\/dc\/walletservice\/clientid","title":"let clientId: String","type":"property"},{"path":"\/documentation\/dc\/walletservice\/delegate","title":"var delegate: (any WalletServiceDelegate)?","type":"property"},{"path":"\/documentation\/dc\/walletservice\/refreshuri","title":"let refreshUri: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservice\/deletecredential(with:)","title":"func deleteCredential(with: String) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservice\/previewinvitation(using:)","title":"func previewInvitation(using: URL) async throws -> (any PreviewDescriptor)","type":"method"},{"path":"\/documentation\/dc\/walletservice\/processcredential(with:action:)","title":"func processCredential(with: CredentialPreviewInfo, action: CredentialAction) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservice\/processproofrequest(with:action:)","title":"func processProofRequest(with: VerificationPreviewInfo, action: VerificationAction) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservice\/refreshtoken(using:accountname:pushtoken:)","title":"func refreshToken(using: String, accountName: String?, pushToken: String?) async throws -> TokenInfo","type":"method"},{"path":"\/documentation\/dc\/walletservice\/retrievecredential(with:)","title":"func retrieveCredential(with: String) async throws -> Credential?","type":"method"},{"path":"\/documentation\/dc\/walletservice\/retrievecredentials(filter:)","title":"func retrieveCredentials(filter: CredentialState) async throws -> [Credential]","type":"method"},{"path":"\/documentation\/dc\/walletservice\/retrieveinvitations()","title":"func retrieveInvitations() async throws -> [InvitationInfo]","type":"method"},{"path":"\/documentation\/dc\/walletservice\/retrieveproofrequests(filter:)","title":"func retrieveProofRequests(filter: VerificationState) async throws -> [VerificationInfo]","type":"method"}],"path":"\/documentation\/dc\/walletservice","title":"WalletService","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialdescriptor\/documenttypes","title":"var documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/format","title":"var format: CredentialFormat","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/issuerdid","title":"var issuerDid: DID","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/jsonrepresentation","title":"var jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/role","title":"var role: CredentialRole","type":"property"},{"path":"\/documentation\/dc\/credentialdescriptor\/state","title":"var state: CredentialState","type":"property"}],"path":"\/documentation\/dc\/credentialdescriptor","title":"CredentialDescriptor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/previewdescriptor\/comment","title":"var comment: String?","type":"property"},{"path":"\/documentation\/dc\/previewdescriptor\/documenttypes","title":"var documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/previewdescriptor\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/dc\/previewdescriptor\/jsonrepresentation","title":"var jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/previewdescriptor\/label","title":"var label: String?","type":"property"},{"path":"\/documentation\/dc\/previewdescriptor\/url","title":"var url: URL","type":"property"}],"path":"\/documentation\/dc\/previewdescriptor","title":"PreviewDescriptor","type":"protocol"},{"path":"\/documentation\/dc\/walletdescriptor","title":"WalletDescriptor","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservicedelegate\/walletservice(service:didacceptcredential:)","title":"func walletService(service: WalletService, didAcceptCredential: Credential)","type":"method"},{"path":"\/documentation\/dc\/walletservicedelegate\/walletservice(service:didgenerateproof:)","title":"func walletService(service: WalletService, didGenerateProof: VerificationInfo)","type":"method"},{"path":"\/documentation\/dc\/walletservicedelegate\/walletservice(service:didverifycredential:)","title":"func walletService(service: WalletService, didVerifyCredential: VerificationInfo)","type":"method"}],"path":"\/documentation\/dc\/walletservicedelegate","title":"WalletServiceDelegate","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservicedescriptor\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/dc\/walletservicedescriptor\/baseuri","title":"var baseUri: URL","type":"property"},{"path":"\/documentation\/dc\/walletservicedescriptor\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/dc\/walletservicedescriptor\/delegate","title":"var delegate: (any WalletServiceDelegate)?","type":"property"},{"path":"\/documentation\/dc\/walletservicedescriptor\/refreshuri","title":"var refreshUri: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/walletservicedescriptor\/deletecredential(with:)","title":"func deleteCredential(with: String) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/previewinvitation(using:)","title":"func previewInvitation(using: URL) async throws -> (any PreviewDescriptor)","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/processcredential(with:action:)","title":"func processCredential(with: CredentialPreviewInfo, action: CredentialAction) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/processproofrequest(with:action:)","title":"func processProofRequest(with: VerificationPreviewInfo, action: VerificationAction) async throws","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/refreshtoken(using:accountname:pushtoken:)","title":"func refreshToken(using: String, accountName: String?, pushToken: String?) async throws -> TokenInfo","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/retrievecredential(with:)","title":"func retrieveCredential(with: String) async throws -> Credential?","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/retrievecredentials(filter:)","title":"func retrieveCredentials(filter: CredentialState) async throws -> [Credential]","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/retrieveinvitations()","title":"func retrieveInvitations() async throws -> [InvitationInfo]","type":"method"},{"path":"\/documentation\/dc\/walletservicedescriptor\/retrieveproofrequests(filter:)","title":"func retrieveProofRequests(filter: VerificationState) async throws -> [VerificationInfo]","type":"method"}],"path":"\/documentation\/dc\/walletservicedescriptor","title":"WalletServiceDescriptor","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/agentinfo\/agenturl","title":"let agentURL: URL","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/connectionurl","title":"let connectionURL: URL","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/creationdate","title":"let creationDate: Date","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/did","title":"let did: DID","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dc\/agentinfo\/verkey","title":"let verkey: Verkey","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/agentinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/agentinfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/agentinfo","title":"AgentInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionagentinfo\/agenturl","title":"let agentURL: URL","type":"property"},{"path":"\/documentation\/dc\/connectionagentinfo\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dc\/connectionagentinfo\/pairwise","title":"let pairwise: (did: DID, verkey: Verkey)","type":"property"},{"path":"\/documentation\/dc\/connectionagentinfo\/public","title":"var `public`: (did: DID, verkey: Verkey)?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionagentinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/connectionagentinfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionagentinfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/connectionagentinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/connectionagentinfo","title":"ConnectionAgentInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/connectioninfo\/icon","title":"var icon: UIImage?","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/local","title":"let local: ConnectionAgentInfo","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/name","title":"var name: String","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/remote","title":"let remote: ConnectionAgentInfo","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/role","title":"let role: String","type":"property"},{"path":"\/documentation\/dc\/connectioninfo\/state","title":"let state: ConnectionState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/connectioninfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/connectioninfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/connectioninfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/connectioninfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/connectioninfo","title":"ConnectionInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credential\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credential\/documenttypes","title":"var documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/credential\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/dc\/credential\/type","title":"let type: any CredentialDescriptor","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/credential\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/credential","title":"Credential","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/comment","title":"let comment: String?","type":"property"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/documenttypes","title":"let documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/jsonrepresentation","title":"let jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/label","title":"let label: String?","type":"property"},{"path":"\/documentation\/dc\/credentialpreviewinfo\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/dc\/credentialpreviewinfo","title":"CredentialPreviewInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/indycredential\/agentname","title":"var agentName: String","type":"property"},{"path":"\/documentation\/dc\/indycredential\/agenturl","title":"var agentURL: URL","type":"property"},{"path":"\/documentation\/dc\/indycredential\/credentialdefinitionid","title":"let credentialDefinitionId: String","type":"property"},{"path":"\/documentation\/dc\/indycredential\/documenttypes","title":"let documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/indycredential\/format","title":"let format: CredentialFormat","type":"property"},{"path":"\/documentation\/dc\/indycredential\/friendlyname","title":"var friendlyName: String?","type":"property"},{"path":"\/documentation\/dc\/indycredential\/icon","title":"var icon: UIImage?","type":"property"},{"path":"\/documentation\/dc\/indycredential\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/indycredential\/issuerdid","title":"let issuerDid: DID","type":"property"},{"path":"\/documentation\/dc\/indycredential\/jsonrepresentation","title":"let jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/indycredential\/offertime","title":"var offerTime: Date","type":"property"},{"path":"\/documentation\/dc\/indycredential\/properties","title":"let properties: [String : AnyCodable]","type":"property"},{"path":"\/documentation\/dc\/indycredential\/role","title":"let role: CredentialRole","type":"property"},{"path":"\/documentation\/dc\/indycredential\/schemaname","title":"let schemaName: String","type":"property"},{"path":"\/documentation\/dc\/indycredential\/schemaversion","title":"let schemaVersion: String","type":"property"},{"path":"\/documentation\/dc\/indycredential\/state","title":"let state: CredentialState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/indycredential\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/indycredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/indycredential\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/indycredential\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/indycredential","title":"IndyCredential","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/invitationinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/invitationinfo\/properties","title":"let properties: [String : AnyCodable]","type":"property"},{"path":"\/documentation\/dc\/invitationinfo\/recipientkey","title":"let recipientKey: String","type":"property"},{"path":"\/documentation\/dc\/invitationinfo\/shorturl","title":"let shortURL: URL?","type":"property"},{"path":"\/documentation\/dc\/invitationinfo\/timestamps","title":"var timestamps: (created: Date, updated: Date?)?","type":"property"},{"path":"\/documentation\/dc\/invitationinfo\/url","title":"let url: URL","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/invitationinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/invitationinfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/invitationinfo\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/invitationinfo\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/invitationinfo","title":"InvitationInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/jsonldcredential\/agentname","title":"var agentName: String","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/agenturl","title":"var agentURL: URL","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/documenttypes","title":"let documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/format","title":"let format: CredentialFormat","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/friendlyname","title":"var friendlyName: String?","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/icon","title":"var icon: UIImage?","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/issuerdid","title":"let issuerDid: DID","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/jsonrepresentation","title":"let jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/offertime","title":"var offerTime: Date","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/properties","title":"let properties: [String : AnyCodable]","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/role","title":"let role: CredentialRole","type":"property"},{"path":"\/documentation\/dc\/jsonldcredential\/state","title":"let state: CredentialState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/jsonldcredential\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/jsonldcredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/jsonldcredential\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/jsonldcredential\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/jsonldcredential","title":"JSONLDCredential","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/mdoccredential\/agentname","title":"var agentName: String","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/agenturl","title":"var agentURL: URL","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/documenttypes","title":"let documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/format","title":"let format: CredentialFormat","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/friendlyname","title":"var friendlyName: String?","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/icon","title":"var icon: UIImage?","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/issuerdid","title":"let issuerDid: DID","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/jsonrepresentation","title":"let jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/offertime","title":"var offerTime: Date","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/properties","title":"let properties: [String : AnyCodable]","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/role","title":"let role: CredentialRole","type":"property"},{"path":"\/documentation\/dc\/mdoccredential\/state","title":"let state: CredentialState","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/mdoccredential\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/mdoccredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/mdoccredential\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/mdoccredential\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/mdoccredential","title":"MDocCredential","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilter\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilter\/attributename","title":"let attributeName: String","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilter\/attributevalues","title":"let attributeValues: [String]","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilter\/exclude","title":"let exclude: Bool","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilter\/proofrequestreferent","title":"let proofRequestReferent: String?","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/credentialfilter","title":"ProofRequest.CredentialFilter","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/type","title":"let type: PredicateType","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/value","title":"let value: String","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/equal","title":"case equal","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/greaterthan","title":"case greaterThan","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/greaterthanorequal","title":"case greaterThanOrEqual","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/lessthan","title":"case lessThan","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/lessthanorequal","title":"case lessThanOrEqual","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/notequal","title":"case notEqual","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest\/predicate\/predicatetype","title":"ProofRequest.Predicate.PredicateType","type":"enum"}],"path":"\/documentation\/dc\/proofrequest\/predicate","title":"ProofRequest.Predicate","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/options-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/options-swift.struct\/challenge","title":"let challenge: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/options-swift.struct\/domain","title":"let domain: String?","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/options-swift.struct","title":"ProofRequest.PresentationRequest.Options","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/const","title":"let const: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/enum","title":"let `enum`: [AnyDecodable]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/exclusivemaximum","title":"let exclusiveMaximum: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/exclusiveminimum","title":"let exclusiveMinimum: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/maximum","title":"let maximum: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/minimum","title":"let minimum: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/not","title":"let not: AnyDecodable?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct\/type","title":"let type: String","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.struct","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints.Field.Filter","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/filter-swift.property","title":"let filter: Filter?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/path","title":"let path: [String]","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/predicate","title":"let predicate: OptionalityType?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field\/purpose","title":"let purpose: String?","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/field","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints.Field","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/holdersubject\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/holdersubject\/directive","title":"let directive: OptionalityType","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/holdersubject\/fieldid","title":"let fieldId: [String]","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/holdersubject","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints.HolderSubject","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/fields","title":"let fields: [Field]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/isholder","title":"let isHolder: [HolderSubject]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/limitdisclosure","title":"let limitDisclosure: OptionalityType?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/samesubject","title":"let sameSubject: [HolderSubject]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statuses","title":"let statuses: StatusType?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/subjectisissuer","title":"let subjectIsIssuer: OptionalityType?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/preferred","title":"case preferred","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/required","title":"case required","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/optionalitytype","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints.OptionalityType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/active(directive:)","title":"case active(directive: String)","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/revoked(directive:)","title":"case revoked(directive: String)","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/suspended(directtive:)","title":"case suspended(directtive: String)","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct\/statustype","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints.StatusType","type":"enum"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.struct","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Constraints","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/schema-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/schema-swift.struct\/required","title":"let required: Bool","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/schema-swift.struct\/uri","title":"let uri: URL","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/schema-swift.struct","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor.Schema","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/constraints-swift.property","title":"let constraints: Constraints?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/group","title":"let group: [String]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/schema-swift.property","title":"let schema: [Schema]?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptor","title":"ProofRequest.PresentationRequest.PresentationDefinition.InputDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/count","title":"let count: Int?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/from","title":"let from: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/fromnested","title":"let fromNested: [SubmissionRequirement]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/max","title":"let max: Int?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/min","title":"let min: Int?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/rule","title":"let rule: RuleType","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/all","title":"case all","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/pick","title":"case pick","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct\/ruletype","title":"ProofRequest.PresentationRequest.PresentationDefinition.SubmissionRequirement.RuleType","type":"enum"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.struct","title":"ProofRequest.PresentationRequest.PresentationDefinition.SubmissionRequirement","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.property","title":"let format: Format","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/inputdescriptors","title":"let inputDescriptors: [InputDescriptor]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/purpose","title":"let purpose: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/submissionrequirement-swift.property","title":"let submissionRequirement: [SubmissionRequirement]?","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/jwt(alg:)","title":"case jwt(alg: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/jwtvc(alg:)","title":"case jwtVc(alg: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/jwtvcjson(alg:)","title":"case jwtVcJson(alg: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/jwtvp(alg:)","title":"case jwtVp(alg: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/jwtvpjson(alg:)","title":"case jwtVpJson(alg: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/ldp(prooftype:)","title":"case ldp(proofType: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/ldpvc(prooftype:)","title":"case ldpVc(proofType: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/ldpvp(prooftype:)","title":"case ldpVp(proofType: [String])","type":"case"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/mdoc(alg:)","title":"case mdoc(alg: [String])","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition\/format-swift.enum","title":"ProofRequest.PresentationRequest.PresentationDefinition.Format","type":"enum"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefinition","title":"ProofRequest.PresentationRequest.PresentationDefinition","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/options-swift.property","title":"let options: Options?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/presentationrequest\/presentationdefination","title":"let presentationDefination: PresentationDefinition","type":"property"}],"path":"\/documentation\/dc\/proofrequest\/presentationrequest","title":"ProofRequest.PresentationRequest","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/bbs","title":"let bbs: PresentationRequest?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/credentialfilters","title":"let credentialFilters: [CredentialFilter]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/jsonid","title":"let jsonId: PresentationRequest?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/mdoc","title":"let mdoc: PresentationRequest?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/properties","title":"let properties: [String : AnyCodable]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/requestedattributes","title":"let requestedAttributes: [String : AnyDecodable]?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/requestedpredicate","title":"let requestedPredicate: Predicate?","type":"property"},{"path":"\/documentation\/dc\/proofrequest\/version","title":"let version: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/proofrequest\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/proofrequest\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/proofrequest","title":"ProofRequest","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationinfo\/connection","title":"let connection: ConnectionInfo","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/info","title":"let info: AnyCodable?","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/proofdisplay","title":"let proofDisplay: String?","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/proofrequest","title":"let proofRequest: ProofRequest","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/proofschemaid","title":"let proofSchemaId: String?","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/properties","title":"let properties: [String : AnyCodable]?","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/role","title":"let role: VerificationRole","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/state","title":"let state: VerificationState","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/timestamps","title":"let timestamps: (created: Date, states: [String : Date])","type":"property"},{"path":"\/documentation\/dc\/verificationinfo\/verifierdid","title":"let verifierDID: DID","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/verificationinfo\/decodable-implementations","title":"Decodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/verificationinfo","title":"VerificationInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/comment","title":"let comment: String?","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/documenttypes","title":"let documentTypes: [String]","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/jsonrepresentation","title":"let jsonRepresentation: Data?","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/label","title":"let label: String?","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/purpose","title":"let purpose: String","type":"property"},{"path":"\/documentation\/dc\/verificationpreviewinfo\/url","title":"let url: URL","type":"property"}],"path":"\/documentation\/dc\/verificationpreviewinfo","title":"VerificationPreviewInfo","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/wallet\/agent","title":"let agent: AgentInfo","type":"property"},{"path":"\/documentation\/dc\/wallet\/baseuri","title":"let baseUri: URL","type":"property"},{"path":"\/documentation\/dc\/wallet\/clientid","title":"let clientId: String","type":"property"},{"path":"\/documentation\/dc\/wallet\/clientsecret","title":"var clientSecret: String?","type":"property"},{"path":"\/documentation\/dc\/wallet\/connections","title":"var connections: [ConnectionInfo]","type":"property"},{"path":"\/documentation\/dc\/wallet\/credentials","title":"var credentials: [Credential]","type":"property"},{"path":"\/documentation\/dc\/wallet\/invitations","title":"var invitations: [InvitationInfo]","type":"property"},{"path":"\/documentation\/dc\/wallet\/refreshuri","title":"let refreshUri: URL","type":"property"},{"path":"\/documentation\/dc\/wallet\/token","title":"var token: TokenInfo","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/wallet\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/dc\/wallet\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/wallet\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/dc\/wallet\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/wallet","title":"Wallet","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/dc\/did","title":"DID","type":"typealias"},{"path":"\/documentation\/dc\/verkey","title":"Verkey","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/connected","title":"case connected","type":"case"},{"path":"\/documentation\/dc\/connectionstate\/inboundoffer","title":"case inboundOffer","type":"case"},{"path":"\/documentation\/dc\/connectionstate\/outboundoffer","title":"case outboundOffer","type":"case"},{"path":"\/documentation\/dc\/connectionstate\/rejected","title":"case rejected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/connectionstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/connectionstate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/connectionstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/connectionstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/connectionstate","title":"ConnectionState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialaction\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/dc\/credentialaction\/rejected","title":"case rejected","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialaction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/credentialaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/credentialaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/credentialaction","title":"CredentialAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/indy","title":"case indy","type":"case"},{"path":"\/documentation\/dc\/credentialformat\/jsonld","title":"case jsonld","type":"case"},{"path":"\/documentation\/dc\/credentialformat\/mdoc","title":"case mdoc","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/credentialformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialformat\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/credentialformat\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/credentialformat\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/credentialformat","title":"CredentialFormat","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/holder","title":"case holder","type":"case"},{"path":"\/documentation\/dc\/credentialrole\/issuer","title":"case issuer","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/credentialrole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialrole\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/credentialrole\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/credentialrole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/credentialrole","title":"CredentialRole","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/accepted","title":"case accepted","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/inboundoffer","title":"case inboundOffer","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/inboundrequest","title":"case inboundRequest","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/issued","title":"case issued","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/outboundoffer","title":"case outboundOffer","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/outboundrequest","title":"case outboundRequest","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/rejected","title":"case rejected","type":"case"},{"path":"\/documentation\/dc\/credentialstate\/stored","title":"case stored","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/credentialstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/credentialstate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/credentialstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/credentialstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/credentialstate","title":"CredentialState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationaction\/generate","title":"case generate","type":"case"},{"path":"\/documentation\/dc\/verificationaction\/reject","title":"case reject","type":"case"},{"path":"\/documentation\/dc\/verificationaction\/share","title":"case share","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationaction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationaction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/verificationaction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationaction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationaction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/verificationaction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/verificationaction","title":"VerificationAction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/prover","title":"case prover","type":"case"},{"path":"\/documentation\/dc\/verificationrole\/verifier","title":"case verifier","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/verificationrole\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationrole\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/verificationrole\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/verificationrole\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/verificationrole","title":"VerificationRole","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/deleted","title":"case deleted","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/failed","title":"case failed","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/inboundproofrequest","title":"case inboundProofRequest","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/inboundverificationrequest","title":"case inboundVerificationRequest","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/outboundproofrequest","title":"case outboundProofRequest","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/outboundverificationrequest","title":"case outboundVerificationRequest","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/passed","title":"case passed","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/proofgenerated","title":"case proofGenerated","type":"case"},{"path":"\/documentation\/dc\/verificationstate\/proofshared","title":"case proofShared","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/verificationstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/dc\/verificationstate\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/dc\/verificationstate\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/dc\/verificationstate\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/dc\/verificationstate","title":"VerificationState","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/walleterror\/==(_:_:)","title":"static func == (WalletError, WalletError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/dc\/walleterror\/datainitializationfailed","title":"case dataInitializationFailed","type":"case"},{"path":"\/documentation\/dc\/walleterror\/failedtoparse","title":"case failedToParse","type":"case"},{"path":"\/documentation\/dc\/walleterror\/invalidformat","title":"case invalidFormat","type":"case"},{"path":"\/documentation\/dc\/walleterror\/underlyingerror(error:)","title":"case underlyingError(error: Error)","type":"case"},{"path":"\/documentation\/dc\/walleterror\/verificationfailed(message:)","title":"case verificationFailed(message: String)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/dc\/walleterror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/dc\/walleterror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/walleterror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/dc\/walleterror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/dc\/walleterror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/dc\/walleterror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/dc\/walleterror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/dc\/walleterror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/dc\/walleterror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/dc\/walleterror","title":"WalletError","type":"enum"}],"path":"\/documentation\/dc","title":"DC","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialprovider\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialprovider\/delegate","title":"var delegate: PublicKeyCredentialDelegate?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialprovider\/createcredentialassertionrequest(options:clientdataparams:)","title":"func createCredentialAssertionRequest(options: PublicKeyCredentialRequestOptions, clientDataParams: [String : Any]?)","type":"method"},{"path":"\/documentation\/fido2\/publickeycredentialprovider\/createcredentialattestationrequest(_:statementprovider:options:)","title":"func createCredentialAttestationRequest(UUID, statementProvider: AttestionStatementProvider, options: PublicKeyCredentialCreationOptions)","type":"method"}],"path":"\/documentation\/fido2\/publickeycredentialprovider","title":"PublicKeyCredentialProvider","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestionstatementprovider\/aaguid","title":"var aaguid: UUID","type":"property"},{"path":"\/documentation\/fido2\/attestionstatementprovider\/format","title":"var format: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestionstatementprovider\/statement()","title":"func statement() throws -> Dictionary<String, Any>","type":"method"}],"path":"\/documentation\/fido2\/attestionstatementprovider","title":"AttestionStatementProvider","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorresponse\/clientdatajson","title":"var clientDataJSON: String","type":"property"}],"path":"\/documentation\/fido2\/authenticatorresponse","title":"AuthenticatorResponse","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/packedattestionstatementprovider\/authenticatordata","title":"var authenticatorData: Data?","type":"property"},{"path":"\/documentation\/fido2\/packedattestionstatementprovider\/clientdatahash","title":"var clientDataHash: Data?","type":"property"}],"path":"\/documentation\/fido2\/packedattestionstatementprovider","title":"PackedAttestionStatementProvider","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/fido2\/publickeycredentialdelegate\/publickeycredential(provider:didcompletewithassertion:)-7y8ju","title":"func publicKeyCredential(provider: PublicKeyCredentialProvider, didCompleteWithAssertion: PublicKeyCredential<AuthenticatorAssertionResponse>)","type":"method"}],"title":"PublicKeyCredentialDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/fido2\/publickeycredentialdelegate\/publickeycredential(provider:didcompletewithassertion:)-funq","title":"func publicKeyCredential(provider: PublicKeyCredentialProvider, didCompleteWithAssertion: PublicKeyCredential<AuthenticatorAssertionResponse>)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/fido2\/publickeycredentialdelegate\/publickeycredential(provider:didcompletewithattestation:)-1v22e","title":"func publicKeyCredential(provider: PublicKeyCredentialProvider, didCompleteWithAttestation: PublicKeyCredential<AuthenticatorAttestationResponse>)","type":"method"}],"title":"PublicKeyCredentialDelegate Implementations","type":"groupMarker"}],"path":"\/documentation\/fido2\/publickeycredentialdelegate\/publickeycredential(provider:didcompletewithattestation:)-9vsot","title":"func publicKeyCredential(provider: PublicKeyCredentialProvider, didCompleteWithAttestation: PublicKeyCredential<AuthenticatorAttestationResponse>)","type":"method"},{"path":"\/documentation\/fido2\/publickeycredentialdelegate\/publickeycredential(provider:didcompletewitherror:)","title":"func publicKeyCredential(provider: PublicKeyCredentialProvider, didCompleteWithError: Error)","type":"method"}],"path":"\/documentation\/fido2\/publickeycredentialdelegate","title":"PublicKeyCredentialDelegate","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/authenticatordata","title":"var authenticatorData: [UInt8]","type":"property"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/clientdatajson","title":"var clientDataJSON: String","type":"property"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/signature","title":"var signature: [UInt8]","type":"property"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/userhandle","title":"var userHandle: [UInt8]?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorassertionresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fido2\/authenticatorassertionresponse","title":"AuthenticatorAssertionResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattestationresponse\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattestationresponse\/attestationobject","title":"var attestationObject: [UInt8]","type":"property"},{"path":"\/documentation\/fido2\/authenticatorattestationresponse\/clientdatajson","title":"var clientDataJSON: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattestationresponse\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fido2\/authenticatorattestationresponse","title":"AuthenticatorAttestationResponse","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorextensions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/fido2\/authenticatorextensions\/init(txauthsimple:)","title":"init(txAuthSimple: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorextensions\/txauthsimple","title":"var txAuthSimple: String","type":"property"}],"path":"\/documentation\/fido2\/authenticatorextensions","title":"AuthenticatorExtensions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorselectioncriteria\/init(authenticatorattachment:requireresidentkey:userverification:)","title":"init(authenticatorAttachment: AuthenticatorAttachment, requireResidentKey: Bool, userVerification: UserVerificationRequirement)","type":"init"},{"path":"\/documentation\/fido2\/authenticatorselectioncriteria\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorselectioncriteria\/authenticatorattachment","title":"let authenticatorAttachment: AuthenticatorAttachment","type":"property"},{"path":"\/documentation\/fido2\/authenticatorselectioncriteria\/requireresidentkey","title":"let requireResidentKey: Bool","type":"property"},{"path":"\/documentation\/fido2\/authenticatorselectioncriteria\/userverification","title":"var userVerification: UserVerificationRequirement","type":"property"}],"path":"\/documentation\/fido2\/authenticatorselectioncriteria","title":"AuthenticatorSelectionCriteria","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/basicattestation\/init(_:base64privatekey:base64certificate:)","title":"init(UUID, base64PrivateKey: String, base64Certificate: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/basicattestation\/aaguid","title":"let aaguid: UUID","type":"property"},{"path":"\/documentation\/fido2\/basicattestation\/authenticatordata","title":"var authenticatorData: Data?","type":"property"},{"path":"\/documentation\/fido2\/basicattestation\/base64certificate","title":"let base64Certificate: String","type":"property"},{"path":"\/documentation\/fido2\/basicattestation\/base64privatekey","title":"let base64PrivateKey: String","type":"property"},{"path":"\/documentation\/fido2\/basicattestation\/clientdatahash","title":"var clientDataHash: Data?","type":"property"},{"path":"\/documentation\/fido2\/basicattestation\/format","title":"let format: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/basicattestation\/statement()","title":"func statement() throws -> Dictionary<String, Any>","type":"method"}],"path":"\/documentation\/fido2\/basicattestation","title":"BasicAttestation","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/noneattestation\/init()","title":"init()","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/noneattestation\/aaguid","title":"let aaguid: UUID","type":"property"},{"path":"\/documentation\/fido2\/noneattestation\/format","title":"let format: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/noneattestation\/statement()","title":"func statement() -> Dictionary<String, Any>","type":"method"}],"path":"\/documentation\/fido2\/noneattestation","title":"NoneAttestation","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredential\/clientextensionresults\/init(from:)","title":"init(from: any Decoder) throws","type":"init"}],"path":"\/documentation\/fido2\/publickeycredential\/clientextensionresults","title":"PublicKeyCredential.ClientExtensionResults","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredential\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredential\/getclientextensionresults","title":"var getClientExtensionResults: PublicKeyCredential<T>.ClientExtensionResults","type":"property"},{"path":"\/documentation\/fido2\/publickeycredential\/gettransports","title":"var getTransports: [String]?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredential\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredential\/rawid","title":"var rawId: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredential\/response","title":"var response: T","type":"property"},{"path":"\/documentation\/fido2\/publickeycredential\/type","title":"var type: PublicKeyCredentialType","type":"property"}],"path":"\/documentation\/fido2\/publickeycredential","title":"PublicKeyCredential","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/init(rp:user:challenge:timeout:excludecredentials:authenticatorselection:attestation:pubkeycredparams:)","title":"init(rp: PublicKeyCredentialRpEntity, user: PublicKeyCredentialUserEntity, challenge: String, timeout: Int, excludeCredentials: [PublicKeyCredentialDescriptor], authenticatorSelection: AuthenticatorSelectionCriteria, attestation: AttestationConveyancePreference, pubKeyCredParams: [PublicKeyCredentialParameters])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/attestation","title":"var attestation: AttestationConveyancePreference","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/authenticatorselection","title":"var authenticatorSelection: AuthenticatorSelectionCriteria","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/challenge","title":"var challenge: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/excludecredentials","title":"var excludeCredentials: [PublicKeyCredentialDescriptor]","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/extensions","title":"var extensions: AuthenticatorExtensions?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/pubkeycredparams","title":"var pubKeyCredParams: [PublicKeyCredentialParameters]","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/rp","title":"var rp: PublicKeyCredentialRpEntity","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/timeout","title":"var timeout: Int","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialcreationoptions\/user","title":"var user: PublicKeyCredentialUserEntity","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialcreationoptions","title":"PublicKeyCredentialCreationOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialdescriptor\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialdescriptor\/init(id:transports:)","title":"init(id: String, transports: [AuthenticatorTransport]?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialdescriptor\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialdescriptor\/transports","title":"let transports: [AuthenticatorTransport]?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialdescriptor\/type","title":"let type: PublicKeyCredentialType","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialdescriptor","title":"PublicKeyCredentialDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialparameters\/init(alg:)","title":"init(alg: COSEAlgorithmIdentifier)","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialparameters\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialparameters\/alg","title":"let alg: COSEAlgorithmIdentifier?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialparameters\/type","title":"let type: PublicKeyCredentialType","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialparameters","title":"PublicKeyCredentialParameters","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/init(challenge:rpid:allowcredentials:userverification:timeout:)","title":"init(challenge: String, rpId: String, allowCredentials: [PublicKeyCredentialDescriptor], userVerification: UserVerificationRequirement, timeout: Int)","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/allowcredentials","title":"var allowCredentials: [PublicKeyCredentialDescriptor]?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/challenge","title":"var challenge: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/extensions","title":"var extensions: AuthenticatorExtensions?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/rpid","title":"var rpId: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/timeout","title":"var timeout: Int","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrequestoptions\/userverification","title":"var userVerification: UserVerificationRequirement","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialrequestoptions","title":"PublicKeyCredentialRequestOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialrpentity\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialrpentity\/init(id:name:icon:)","title":"init(id: String?, name: String, icon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialrpentity\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrpentity\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialrpentity\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialrpentity","title":"PublicKeyCredentialRpEntity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/init(id:displayname:name:icon:)","title":"init(id: String, displayName: String, name: String, icon: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/icon","title":"let icon: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/id","title":"let id: [UInt8]","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/name","title":"let name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialuserentity\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/fido2\/publickeycredentialuserentity","title":"PublicKeyCredentialUserEntity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/selfattestation\/init(_:)","title":"init(UUID)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/selfattestation\/aaguid","title":"let aaguid: UUID","type":"property"},{"path":"\/documentation\/fido2\/selfattestation\/authenticatordata","title":"var authenticatorData: Data?","type":"property"},{"path":"\/documentation\/fido2\/selfattestation\/clientdatahash","title":"var clientDataHash: Data?","type":"property"},{"path":"\/documentation\/fido2\/selfattestation\/format","title":"let format: String","type":"property"},{"path":"\/documentation\/fido2\/selfattestation\/privatekey","title":"var privateKey: SecureEnclave.P256.Signing.PrivateKey?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/selfattestation\/statement()","title":"func statement() throws -> Dictionary<String, Any>","type":"method"}],"path":"\/documentation\/fido2\/selfattestation","title":"SelfAttestation","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/direct","title":"case direct","type":"case"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/indirect","title":"case indirect","type":"case"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/none","title":"case none","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/attestationconveyancepreference\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/attestationconveyancepreference\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/attestationconveyancepreference\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/attestationconveyancepreference","title":"AttestationConveyancePreference","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/crossplatform","title":"case crossPlatform","type":"case"},{"path":"\/documentation\/fido2\/authenticatorattachment\/platform","title":"case platform","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/authenticatorattachment\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatorattachment\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/authenticatorattachment\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/authenticatorattachment\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/authenticatorattachment","title":"AuthenticatorAttachment","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/ble","title":"case ble","type":"case"},{"path":"\/documentation\/fido2\/authenticatortransport\/hybrid","title":"case hybrid","type":"case"},{"path":"\/documentation\/fido2\/authenticatortransport\/internal","title":"case `internal`","type":"case"},{"path":"\/documentation\/fido2\/authenticatortransport\/nfc","title":"case nfc","type":"case"},{"path":"\/documentation\/fido2\/authenticatortransport\/smartcard","title":"case smartcard","type":"case"},{"path":"\/documentation\/fido2\/authenticatortransport\/usb","title":"case usb","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/authenticatortransport\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/authenticatortransport\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/authenticatortransport\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/authenticatortransport\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/authenticatortransport","title":"AuthenticatorTransport","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/es256","title":"case es256","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/es384","title":"case es384","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/es512","title":"case es512","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/ps256","title":"case ps256","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/rs1","title":"case rs1","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/rs256","title":"case rs256","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/rs384","title":"case rs384","type":"case"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/rs512","title":"case rs512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/parse(from:)","title":"static func parse(from: Int) -> COSEAlgorithmIdentifier?","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/cosealgorithmidentifier\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/cosealgorithmidentifier\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/cosealgorithmidentifier\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/cosealgorithmidentifier","title":"COSEAlgorithmIdentifier","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/general(message:)","title":"case general(message: String)","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/invalidattestationdata","title":"case invalidAttestationData","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/invalidcertificate","title":"case invalidCertificate","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/invalidprivatekeydata","title":"case invalidPrivateKeyData","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/timeout","title":"case timeout","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/unabletocreatekey","title":"case unableToCreateKey","type":"case"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/unabletocreatesignature","title":"case unableToCreateSignature","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/publickeycredentialerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/fido2\/publickeycredentialerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/fido2\/publickeycredentialerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/publickeycredentialerror","title":"PublicKeyCredentialError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/publickey","title":"case publicKey","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/publickeycredentialtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/publickeycredentialtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/publickeycredentialtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/publickeycredentialtype","title":"PublicKeyCredentialType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/discouraged","title":"case discouraged","type":"case"},{"path":"\/documentation\/fido2\/userverificationrequirement\/preferred","title":"case preferred","type":"case"},{"path":"\/documentation\/fido2\/userverificationrequirement\/required","title":"case required","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/fido2\/userverificationrequirement\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/fido2\/userverificationrequirement\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/fido2\/userverificationrequirement\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/fido2\/userverificationrequirement\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/fido2\/userverificationrequirement","title":"UserVerificationRequirement","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/fido2\/foundation\/uuid\/empty","title":"var empty: UUID","type":"property"}],"path":"\/documentation\/fido2\/foundation\/uuid","title":"UUID","type":"extension"}],"path":"\/documentation\/fido2\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/fido2","title":"FIDO2","type":"module"},{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/init(with:refreshuri:transactionuri:authenticatorid:certificatetrust:)","title":"init(with: String, refreshUri: URL, transactionUri: URL, authenticatorId: String, certificateTrust: URLSessionDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/currentpendingtransaction","title":"var currentPendingTransaction: PendingTransactionInfo?","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/publickeycertificate","title":"var publicKeyCertificate: String?","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/refreshuri","title":"let refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/transactionuri","title":"let transactionUri: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/completetransaction(action:signeddata:)","title":"func completeTransaction(action: UserAction, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/nexttransaction(with:)","title":"func nextTransaction(with: String?) async throws -> NextTransactionInfo","type":"method"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/refreshtoken(using:accountname:pushtoken:additionaldata:)","title":"func refreshToken(using: String, accountName: String?, pushToken: String?, additionalData: [String : Any]?) async throws -> TokenInfo","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/mfa\/cloudauthenticatorservice\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/completetransaction(action:factor:)","title":"func completeTransaction(action: UserAction, factor: FactorType) async throws","type":"method"},{"path":"\/documentation\/mfa\/cloudauthenticatorservice\/login(using:code:)","title":"func login(using: URL, code: String) async throws","type":"method"}],"path":"\/documentation\/mfa\/cloudauthenticatorservice\/mfaservicedescriptor-implementations","title":"MFAServiceDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/cloudauthenticatorservice","title":"CloudAuthenticatorService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/init(json:)","title":"init(json: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/countofavailableenrollments","title":"var countOfAvailableEnrollments: Int","type":"property"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/pushtoken","title":"var pushToken: String","type":"property"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/skiptotpenrollment","title":"var skipTotpEnrollment: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/enroll()","title":"func enroll() async throws","type":"method"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/enroll(with:publickey:signeddata:)","title":"func enroll(with: String, publicKey: String, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/finalize()","title":"func finalize() async throws -> CloudAuthenticator","type":"method"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/nextenrollment()","title":"func nextEnrollment() async -> EnrollableSignature?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/authenticator","title":"CloudRegistrationProvider.Authenticator","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationprovider\/inappinitiate(with:accesstoken:clientid:accountname:)","title":"static func inAppInitiate(with: URL, accessToken: String, clientId: String, accountName: String) async throws -> String","type":"method"}],"path":"\/documentation\/mfa\/cloudregistrationprovider","title":"CloudRegistrationProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationcontroller\/init(json:)","title":"init(json: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationcontroller\/domain","title":"let domain: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationcontroller\/ignoresslcertificate","title":"let ignoreSSLCertificate: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationcontroller\/initiate(with:skiptotpenrollment:pushtoken:additionaldata:)","title":"func initiate(with: String, skipTotpEnrollment: Bool, pushToken: String?, additionalData: [String : Any]?) async throws -> any MFARegistrationDescriptor","type":"method"}],"path":"\/documentation\/mfa\/mfaregistrationcontroller","title":"MFARegistrationController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaservicecontroller\/init(using:)","title":"init(using: some MFAAuthenticatorDescriptor)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaservicecontroller\/initiate()","title":"func initiate() -> MFAServiceDescriptor","type":"method"}],"path":"\/documentation\/mfa\/mfaservicecontroller","title":"MFAServiceController","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/otpauthenticator\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"path":"\/documentation\/mfa\/otpauthenticator\/init(fromqrscan:)","title":"init?(fromQRScan: String)","type":"init"},{"path":"\/documentation\/mfa\/otpauthenticator\/init(with:accountname:factor:)","title":"init(with: String, accountName: String, factor: some Factor)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/otpauthenticator\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/otpauthenticator\/allowedfactors","title":"let allowedFactors: [FactorType]","type":"property"},{"path":"\/documentation\/mfa\/otpauthenticator\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mfa\/otpauthenticator\/servicename","title":"let serviceName: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/otpauthenticator\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mfa\/otpauthenticator","title":"OTPAuthenticator","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/init(with:refreshuri:transactionuri:clientid:authenticatorid:certificatetrust:)","title":"init(with: String, refreshUri: URL, transactionUri: URL, clientId: String, authenticatorId: String, certificateTrust: URLSessionDelegate?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/currentpendingtransaction","title":"var currentPendingTransaction: PendingTransactionInfo?","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/refreshuri","title":"let refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/transactionuri","title":"let transactionUri: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/completetransaction(action:signeddata:)","title":"func completeTransaction(action: UserAction, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/nexttransaction(with:)","title":"func nextTransaction(with: String?) async throws -> NextTransactionInfo","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/refreshtoken(using:accountname:pushtoken:additionaldata:)","title":"func refreshToken(using: String, accountName: String?, pushToken: String?, additionalData: [String : Any]?) async throws -> TokenInfo","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/remove()","title":"func remove() async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/assertisolated(_:file:line:)","title":"func assertIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/assumeisolated(_:file:line:)","title":"func assumeIsolated<T>((isolated Self) throws -> T, file: StaticString, line: UInt) rethrows -> T","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/preconditionisolated(_:file:line:)","title":"func preconditionIsolated(@autoclosure () -> String, file: StaticString, line: UInt)","type":"method"}],"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/actor-implementations","title":"Actor Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/completetransaction(action:factor:)","title":"func completeTransaction(action: UserAction, factor: FactorType) async throws","type":"method"},{"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/login(using:code:)","title":"func login(using: URL, code: String) async throws","type":"method"}],"path":"\/documentation\/mfa\/onpremiseauthenticatorservice\/mfaservicedescriptor-implementations","title":"MFAServiceDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/onpremiseauthenticatorservice","title":"OnPremiseAuthenticatorService","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/init(json:)","title":"init(json: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/countofavailableenrollments","title":"var countOfAvailableEnrollments: Int","type":"property"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/pushtoken","title":"var pushToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/enroll()","title":"func enroll() async throws","type":"method"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/enroll(with:publickey:signeddata:)","title":"func enroll(with: String, publicKey: String, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/finalize()","title":"func finalize() async throws -> OnPremiseAuthenticator","type":"method"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/nextenrollment()","title":"func nextEnrollment() async -> EnrollableSignature?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseregistrationprovider\/authenticator","title":"OnPremiseRegistrationProvider.Authenticator","type":"typealias"}],"path":"\/documentation\/mfa\/onpremiseregistrationprovider","title":"OnPremiseRegistrationProvider","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/authenticatordescriptor\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/authenticatordescriptor\/allowedfactors","title":"var allowedFactors: [FactorType]","type":"property"},{"path":"\/documentation\/mfa\/authenticatordescriptor\/id","title":"var id: String","type":"property"},{"path":"\/documentation\/mfa\/authenticatordescriptor\/servicename","title":"var serviceName: String","type":"property"}],"path":"\/documentation\/mfa\/authenticatordescriptor","title":"AuthenticatorDescriptor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/factor\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/mfa\/factor\/id","title":"var id: UUID","type":"property"}],"path":"\/documentation\/mfa\/factor","title":"Factor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaauthenticatordescriptor\/publickeycertificate","title":"var publicKeyCertificate: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaauthenticatordescriptor\/refreshuri","title":"var refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/mfaauthenticatordescriptor\/theme","title":"var theme: [String : String]","type":"property"},{"path":"\/documentation\/mfa\/mfaauthenticatordescriptor\/token","title":"var token: TokenInfo","type":"property"},{"path":"\/documentation\/mfa\/mfaauthenticatordescriptor\/transactionuri","title":"var transactionUri: URL","type":"property"}],"path":"\/documentation\/mfa\/mfaauthenticatordescriptor","title":"MFAAuthenticatorDescriptor","type":"protocol"},{"children":[{"title":"Associated Types","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/authenticator","title":"Authenticator","type":"associatedtype"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/init(json:)","title":"init(json: String) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/countofavailableenrollments","title":"var countOfAvailableEnrollments: Int","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/pushtoken","title":"var pushToken: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/enroll()","title":"func enroll() async throws","type":"method"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/enroll(with:publickey:signeddata:)","title":"func enroll(with: String, publicKey: String, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/finalize()","title":"func finalize() async throws -> Authenticator","type":"method"},{"path":"\/documentation\/mfa\/mfaregistrationdescriptor\/nextenrollment()","title":"func nextEnrollment() async -> EnrollableSignature?","type":"method"}],"path":"\/documentation\/mfa\/mfaregistrationdescriptor","title":"MFARegistrationDescriptor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/accesstoken","title":"var accessToken: String","type":"property"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/currentpendingtransaction","title":"var currentPendingTransaction: PendingTransactionInfo?","type":"property"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/refreshuri","title":"var refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/transactionuri","title":"var transactionUri: URL","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/completetransaction(action:factor:)","title":"func completeTransaction(action: UserAction, factor: FactorType) async throws","type":"method"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/completetransaction(action:signeddata:)","title":"func completeTransaction(action: UserAction, signedData: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/login(using:code:)","title":"func login(using: URL, code: String) async throws","type":"method"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/nexttransaction(with:)","title":"func nextTransaction(with: String?) async throws -> NextTransactionInfo","type":"method"},{"path":"\/documentation\/mfa\/mfaservicedescriptor\/refreshtoken(using:accountname:pushtoken:additionaldata:)","title":"func refreshToken(using: String, accountName: String?, pushToken: String?, additionalData: [String : Any]?) async throws -> TokenInfo","type":"method"}],"path":"\/documentation\/mfa\/mfaservicedescriptor","title":"MFAServiceDescriptor","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/otpdescriptor\/algorithm","title":"var algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/otpdescriptor\/digits","title":"var digits: Int","type":"property"},{"path":"\/documentation\/mfa\/otpdescriptor\/secret","title":"var secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/mfa\/otpdescriptor\/generatepasscode(from:)-7o1kn","title":"func generatePasscode(from: UInt64) -> String","type":"method"}],"title":"OTPDescriptor Implementations","type":"groupMarker"}],"path":"\/documentation\/mfa\/otpdescriptor\/generatepasscode(from:)-4gdbd","title":"func generatePasscode(from: UInt64) -> String","type":"method"}],"path":"\/documentation\/mfa\/otpdescriptor","title":"OTPDescriptor","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticator\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudauthenticator\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/allowedfactors","title":"let allowedFactors: [FactorType]","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/customattributes","title":"let customAttributes: [String : String]","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/publickeycertificate","title":"var publicKeyCertificate: String?","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/refreshuri","title":"let refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/servicename","title":"let serviceName: String","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/theme","title":"var theme: [String : String]","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/token","title":"var token: TokenInfo","type":"property"},{"path":"\/documentation\/mfa\/cloudauthenticator\/transactionuri","title":"let transactionUri: URL","type":"property"}],"path":"\/documentation\/mfa\/cloudauthenticator","title":"CloudAuthenticator","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/facefactorinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/facefactorinfo\/algorithm","title":"let algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/facefactorinfo\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/mfa\/facefactorinfo\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/mfa\/facefactorinfo\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/mfa\/facefactorinfo","title":"FaceFactorInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/fingerprintfactorinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/fingerprintfactorinfo\/algorithm","title":"let algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/fingerprintfactorinfo\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/mfa\/fingerprintfactorinfo\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/mfa\/fingerprintfactorinfo\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/mfa\/fingerprintfactorinfo","title":"FingerprintFactorInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/init(with:digits:algorithm:counter:)","title":"init(with: String, digits: Int, algorithm: HashAlgorithmType, counter: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/algorithm","title":"let algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/counter","title":"var counter: Int","type":"property"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/digits","title":"let digits: Int","type":"property"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/generatepasscode()","title":"func generatePasscode() -> String","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/hotpfactorinfo\/generatepasscode(from:)","title":"func generatePasscode(from: UInt64) -> String","type":"method"}],"path":"\/documentation\/mfa\/hotpfactorinfo\/otpdescriptor-implementations","title":"OTPDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/hotpfactorinfo","title":"HOTPFactorInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/accountname","title":"var accountName: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/allowedfactors","title":"let allowedFactors: [FactorType]","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/clientid","title":"var clientId: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/ignoresslcertificate","title":"var ignoreSSLCertificate: Bool","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/publickeycertificate","title":"var publicKeyCertificate: String?","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/qrloginuri","title":"let qrloginUri: URL?","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/refreshuri","title":"let refreshUri: URL","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/servicename","title":"let serviceName: String","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/theme","title":"var theme: [String : String]","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/token","title":"var token: TokenInfo","type":"property"},{"path":"\/documentation\/mfa\/onpremiseauthenticator\/transactionuri","title":"let transactionUri: URL","type":"property"}],"path":"\/documentation\/mfa\/onpremiseauthenticator","title":"OnPremiseAuthenticator","type":"struct"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/additionaldata","title":"let additionalData: [TransactionAttribute : String]","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/datatosign","title":"let dataToSign: String","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/factorid","title":"let factorID: UUID","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/factortype","title":"let factorType: String","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/id","title":"let id: String","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/message","title":"let message: String","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/postbackuri","title":"let postbackUri: URL","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/shortid","title":"var shortId: String","type":"property"},{"path":"\/documentation\/mfa\/pendingtransactioninfo\/timestamp","title":"let timeStamp: Date","type":"property"}],"path":"\/documentation\/mfa\/pendingtransactioninfo","title":"PendingTransactionInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/totpfactorinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"path":"\/documentation\/mfa\/totpfactorinfo\/init(with:digits:algorithm:period:)","title":"init(with: String, digits: Int, algorithm: HashAlgorithmType, period: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/totpfactorinfo\/algorithm","title":"let algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/totpfactorinfo\/digits","title":"let digits: Int","type":"property"},{"path":"\/documentation\/mfa\/totpfactorinfo\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/mfa\/totpfactorinfo\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/mfa\/totpfactorinfo\/period","title":"let period: Int","type":"property"},{"path":"\/documentation\/mfa\/totpfactorinfo\/secret","title":"let secret: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/totpfactorinfo\/generatepasscode()","title":"func generatePasscode() -> String","type":"method"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/totpfactorinfo\/remainingtime(_:)","title":"static func remainingTime(TimeInterval) -> Int","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/totpfactorinfo\/generatepasscode(from:)","title":"func generatePasscode(from: UInt64) -> String","type":"method"}],"path":"\/documentation\/mfa\/totpfactorinfo\/otpdescriptor-implementations","title":"OTPDescriptor Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/totpfactorinfo","title":"TOTPFactorInfo","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/userpresencefactorinfo\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/userpresencefactorinfo\/algorithm","title":"let algorithm: HashAlgorithmType","type":"property"},{"path":"\/documentation\/mfa\/userpresencefactorinfo\/displayname","title":"let displayName: String","type":"property"},{"path":"\/documentation\/mfa\/userpresencefactorinfo\/id","title":"let id: UUID","type":"property"},{"path":"\/documentation\/mfa\/userpresencefactorinfo\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/mfa\/userpresencefactorinfo","title":"UserPresenceFactorInfo","type":"struct"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/mfa\/cloudregistrationerror","title":"CloudRegistrationError","type":"typealias"},{"path":"\/documentation\/mfa\/enrollablesignature","title":"EnrollableSignature","type":"typealias"},{"path":"\/documentation\/mfa\/nexttransactioninfo","title":"NextTransactionInfo","type":"typealias"},{"path":"\/documentation\/mfa\/onpremiseregistrationerror","title":"OnPremiseRegistrationError","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/factortype\/face(_:)","title":"case face(FaceFactorInfo)","type":"case"},{"path":"\/documentation\/mfa\/factortype\/fingerprint(_:)","title":"case fingerprint(FingerprintFactorInfo)","type":"case"},{"path":"\/documentation\/mfa\/factortype\/hotp(_:)","title":"case hotp(HOTPFactorInfo)","type":"case"},{"path":"\/documentation\/mfa\/factortype\/totp(_:)","title":"case totp(TOTPFactorInfo)","type":"case"},{"path":"\/documentation\/mfa\/factortype\/userpresence(_:)","title":"case userPresence(UserPresenceFactorInfo)","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/factortype\/valuetype","title":"var valueType: any Factor","type":"property"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/mfa\/factortype\/subscript(dynamicmember:)","title":"subscript<T>(dynamicMember _: KeyPath<any Factor, T>) -> T","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/factortype\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/mfa\/factortype\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/factortype\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/mfa\/factortype\/encodable-implementations","title":"Encodable Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/factortype","title":"FactorType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmerror\/invalidhash","title":"case invalidHash","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/hashalgorithmerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mfa\/hashalgorithmerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/hashalgorithmerror","title":"HashAlgorithmError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/sha1","title":"case sha1","type":"case"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/sha256","title":"case sha256","type":"case"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/sha384","title":"case sha384","type":"case"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/sha512","title":"case sha512","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/hashalgorithmtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mfa\/hashalgorithmtype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mfa\/hashalgorithmtype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/hashalgorithmtype","title":"HashAlgorithmType","type":"enum"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/applicationbundleidentifier","title":"static var applicationBundleIdentifier: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/applicationname","title":"static var applicationName: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/applicationversion","title":"static var applicationVersion: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/deviceid","title":"static var deviceID: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/deviceinsecure","title":"static var deviceInsecure: Bool","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/frameworkversion","title":"static var frameworkVersion: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/hasfaceid","title":"static var hasFaceID: Bool","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/hasfrontcamera","title":"static var hasFrontCamera: Bool","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/hastouchid","title":"static var hasTouchID: Bool","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/model","title":"static var model: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/name","title":"static var name: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/operatingsystem","title":"static var operatingSystem: String","type":"property"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/operatingsystemversion","title":"static var operatingSystemVersion: String","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaattributeinfo\/dictionary(snakecasekey:)","title":"static func dictionary(snakeCaseKey: Bool) -> [String : Any]","type":"method"}],"path":"\/documentation\/mfa\/mfaattributeinfo","title":"MFAAttributeInfo","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/==(_:_:)","title":"static func == (MFARegistrationError, MFARegistrationError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/datainitializationfailed","title":"case dataInitializationFailed","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/enrollmentfailed","title":"case enrollmentFailed","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/failedtoparse","title":"case failedToParse","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/invalidformat","title":"case invalidFormat","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/invalidregistrationdata","title":"case invalidRegistrationData","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/missingauthenticatoridentifier","title":"case missingAuthenticatorIdentifier","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/noenrollablefactors","title":"case noEnrollableFactors","type":"case"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/underlyingerror(error:)","title":"case underlyingError(error: Error)","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/mfaregistrationerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mfa\/mfaregistrationerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaregistrationerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mfa\/mfaregistrationerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/mfaregistrationerror","title":"MFARegistrationError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaserviceerror\/decodingfailed","title":"case decodingFailed","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/general(message:)","title":"case general(message: String)","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/invaliddataresponse","title":"case invalidDataResponse","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/invalidpendingtransaction","title":"case invalidPendingTransaction","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/invalidsigninghash","title":"case invalidSigningHash","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/serializationfailed","title":"case serializationFailed","type":"case"},{"path":"\/documentation\/mfa\/mfaserviceerror\/unabletocreatetransaction","title":"case unableToCreateTransaction","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaserviceerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/mfaserviceerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaserviceerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/mfa\/mfaserviceerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/mfaserviceerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaserviceerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaserviceerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/mfa\/mfaserviceerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/mfa\/mfaserviceerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/mfaserviceerror","title":"MFAServiceError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/custom","title":"case custom","type":"case"},{"path":"\/documentation\/mfa\/transactionattribute\/image","title":"case image","type":"case"},{"path":"\/documentation\/mfa\/transactionattribute\/ipaddress","title":"case ipAddress","type":"case"},{"path":"\/documentation\/mfa\/transactionattribute\/location","title":"case location","type":"case"},{"path":"\/documentation\/mfa\/transactionattribute\/type","title":"case type","type":"case"},{"path":"\/documentation\/mfa\/transactionattribute\/useragent","title":"case userAgent","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/transactionattribute\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/init(from:)","title":"init(from: any Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/transactionattribute\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"},{"path":"\/documentation\/mfa\/transactionattribute\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mfa\/transactionattribute\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/transactionattribute","title":"TransactionAttribute","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/mfa\/useraction\/deny","title":"case deny","type":"case"},{"path":"\/documentation\/mfa\/useraction\/failedbiometry","title":"case failedBiometry","type":"case"},{"path":"\/documentation\/mfa\/useraction\/markasfraud","title":"case markAsFraud","type":"case"},{"path":"\/documentation\/mfa\/useraction\/verify","title":"case verify","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/mfa\/useraction\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/mfa\/useraction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/mfa\/useraction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/mfa\/useraction\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/useraction\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/mfa\/useraction\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/mfa\/useraction","title":"UserAction","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/mfa\/swift\/string\/base32decodeddata()","title":"func base32DecodedData() -> Data?","type":"method"},{"path":"\/documentation\/mfa\/swift\/string\/tosnakecase()","title":"func toSnakeCase() -> String","type":"method"}],"path":"\/documentation\/mfa\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/mfa\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/mfa","title":"MFA","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}